{"version":3,"sources":["/source/runtime.js","lisp2js.js"],"names":["_typeof2","obj","Symbol","constructor","_typeof","createLisp","installEval","g","window","GLOBAL","LISP","module","exports","global","arrayToList","e","array","result","nil","i","length","cons","jsBoolToS","x","t","arguments2Array","args","start","len","Array","makeString","inspect","inspectString","map","v","join","toString","isTrue","_getRestArgs","prototype","slice","call","_output","process","str","stdout","write","console","log","macroTable","name","func","s","car","macrofn","apply","cdr","error","arguments","this","intern","symbolTable","gensym","index","Keyword","keywordTable","type","Cons","HashTable","y","lineNo","path","abbrevTable","quote","quasiquote","unquote","unquote-splicing","p","ss","separator","push","toArray","list","rev","ls","d","n","value","target","substring","end","item","indexOf","char","charCodeAt","kEscapeCharTable","\\","\t","\n","\"","f","m","replace","print","puts","fn","params","last","concat","JS","contents","k","hasOwnProperty","hash","vector","count","undefined","RegExp","rxmatch","re","exec","lastIndexOf","match","Stream","close","peek","fetch","getc","c","regexp","keep","rightContext","eof","getLine","readLine","StrStream","Object","create","NoCloseParenException","kDelimitors","kReSingleDot","kReSymbolOrNumber","kReadUnescapeTable","readTable","Reader","read","stream","readList","unescape","readVector","readSymbolOrNumber","parseFloat","reversed","_1","_2","hex","String","fromCharCode","parseInt","keyword","fs","require","FileStream","BUFFER_SIZE","buffer","Buffer","fd","lines","closeSync","chomped","left","readSync","string","split","stdin","stderr","open","flag","openSync","load","fileName","eval","exit","code","jsrequire","body","pairs","__2","cadr","caar","cadar","pred","clauses","clause","rest","caddr","cdar","__3","expr","thn","els","loop","append","not","cddr","cdddr","xtype","__4","__5","acc","member","assoc","acons","key","datum","alist","reverse","q","dot","dup","vect","seq","take","__6","drop","__7","elt","test","__8","__9","limit","pair","lss","nreconc","tail","top","any","every","bracket","maptree","a","cddar","caadar","op","items","macroexpand","exp","expanded","parent$2dscope","scope","val","sym","it","param","traverse$2dargs","confirm$2dvalid$2dparams","traverse$2dquoted$2dvalue","new$2dscope","klass","table","padding","sl","pl","regex","arg","fnsym","pred$2dnode","then$2dnode","else$2dnode","bodies","base$2dscope","extended$2dscope","rest$2dpos","proper$2dparams","class$2dname","compiled$2dbody","__10","compile","top$2dscope","tree"],"mappings":"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","file":"lisp2js.min.js","sourcesContent":["(function(createLisp, installEval) {\n  'use strict';\n\n  var g = ((typeof window !== 'undefined') ? window :\n           (typeof GLOBAL !== 'undefined') ? GLOBAL : {})\n\n  var LISP = createLisp(g)\n  installEval(LISP);\n\n  if (typeof module !== 'undefined')\n    module.exports = LISP;\n  else\n    g.LISP = LISP;\n})(function(global) {\n  'use strict';\n\n  var LISP = {};\n\n  // Convert JS array into Lisp list.\n  var arrayToList = function(array) {\n    var result = LISP.nil;\n    for (var i = array.length; --i >= 0; )\n      result = LISP.cons(array[i], result);\n    return result;\n  };\n\n  var jsBoolToS = function(x)  { return x ? LISP.t : LISP.nil; }\n  var arguments2Array = function(args, start) {\n    var len = args.length - start;\n    if (len <= 0)\n      return [];\n    var array = new Array(len);\n    for (var i = 0; i < len; ++i)\n      array[i] = args[i + start];\n    return array;\n  };\n\n  var makeString = function(x, inspect) {\n    if (x === LISP.nil)\n      return 'nil';\n    if (x === LISP.t)\n      return 't';\n    if (typeof x == 'string')\n      return inspect ? inspectString(x) : x;\n    if (x instanceof Array)\n      return '#(' + x.map(function(v) { return makeString(v, inspect) }).join(' ') + ')';\n    if (x == null)  // null or undefined\n      return '' + x;\n    return x.toString(inspect);\n  };\n\n  LISP.nil = false;\n  LISP.t = true;\n\n  LISP.isTrue = function(x) {\n    return x !== LISP.nil && x != null;  // !(false || null || undefined)\n  };\n\n  LISP._getRestArgs = function(args, start) {\n    return arrayToList(Array.prototype.slice.call(args, start));\n  };\n  LISP._output = (typeof(process) !== 'undefined'\n                  ? function(str) {  // for node.js.\n                    process.stdout.write(str);\n                  } : function(str) {  // for browser.\n                    console.log(str);\n                  });\n\n  var macroTable = {};\n  LISP['register-macro'] = function(name, func) {\n    macroTable[name] = func;\n    return name;\n  };\n  LISP['macroexpand-1'] = function(s) {\n    if (!LISP['pair?'](s) || !(s.car in macroTable))\n      return s;\n    var macrofn = macroTable[s.car];\n    return LISP.apply(macrofn, s.cdr);\n  };\n\n  LISP.error = function() {\n    throw arguments2Array(arguments, 0).join(', ');\n  };\n\n  // Symbol.\n  var Symbol = function(name) {\n    this.name = name;\n  };\n  Symbol.prototype = {\n    toString: function() {\n      return this.name;\n    },\n  };\n\n  LISP['symbol->string'] = function(x) {\n    return x.name;\n  };\n\n  LISP.intern = (function() {\n    var symbolTable = {};  // key(string) => Symbol object\n    return function(name) {\n      if (name in symbolTable)\n        return symbolTable[name];\n      return symbolTable[name] = new Symbol(name);\n    };\n  })();\n  LISP.gensym = (function() {\n    var index = 0;\n    return function() {\n      return LISP.intern('__' + (++index));\n    };\n  })();\n  LISP['symbol?'] = function(x) {\n    return jsBoolToS(x instanceof Symbol);\n  };\n\n  var Keyword = function(name) {\n    this.name = name;\n  };\n  Keyword.prototype = {\n    toString: function(inspect) {\n      return inspect ? ':' + this.name : this.name;\n    },\n  };\n  LISP['make-keyword'] = (function() {\n    var keywordTable = {};  // key(string) => Keyword object\n    return function(name) {\n      if (name in keywordTable)\n        return keywordTable[name];\n      return keywordTable[name] = new Keyword(name);\n    };\n  })();\n  LISP['keyword?'] = function(x) {\n    return jsBoolToS(x instanceof Keyword);\n  };\n  LISP['keyword->string'] = function(x) {\n    return x.name;\n  };\n\n  LISP.type = function(x) {\n    var type;\n    if (x === LISP.nil || x === LISP.t)\n      type = 'bool';\n    else {\n      var type = typeof x;\n      if (type === 'object') {\n        if (x instanceof Symbol)\n          type = 'symbol';\n        else if (x instanceof Keyword)\n          type = 'keyword';\n        else if (x instanceof Cons)\n          type = 'pair';\n        else if (x instanceof Array)\n          type = 'vector';\n        else if (x instanceof LISP.HashTable)\n          type = 'table';\n      }\n    }\n    return LISP.intern(type);\n  };\n\n  LISP['eq?'] = function(x, y) {\n    return jsBoolToS(x === y);\n  };\n\n  // Cons cell.\n  var Cons = function(car, cdr, lineNo, path) {\n    this.car = car;\n    this.cdr = cdr;\n\n    if (lineNo != null) {\n      this.lineNo = lineNo;\n      this.path = path;\n    }\n  };\n\n  Cons.prototype = {\n    toString: (function() {\n      var abbrevTable = { quote: \"'\", quasiquote: '`', unquote: ',', 'unquote-splicing': ',@' };\n      return function(inspect) {\n        if (this.car instanceof Symbol &&  // (symbol? car)\n            this.cdr instanceof Cons &&    // (pair? cdr)\n            this.cdr.cdr &&                // (null? (cdr cdr))\n            this.car.name in abbrevTable) {\n          return abbrevTable[this.car.name] + makeString(this.cdr.car, inspect);\n        }\n\n        var ss = [];\n        var separator = '(';\n        var p;\n        for (p = this; p instanceof Cons; p = p.cdr) {\n          ss.push(separator);\n          ss.push(makeString(p.car, inspect));\n          separator = ' ';\n        }\n        if (p !== LISP.nil) {\n          ss.push(' . ');\n          ss.push(makeString(p, inspect));\n        }\n        ss.push(')');\n        return ss.join('');\n      };\n    })(),\n    toArray: function() {\n      var result = [];\n      for (var p = this; p instanceof Cons; p = p.cdr)\n        result.push(p.car);\n      return result;\n    },\n  };\n\n  LISP.cons = function(car, cdr) {\n    return new Cons(car, cdr);\n  };\n  LISP.car = function(s) {\n    if (s instanceof Cons)\n      return s.car;\n    return s;\n  };\n  LISP.cdr = function(s) {\n    if (s instanceof Cons)\n      return s.cdr;\n    return LISP.nil;\n  };\n  LISP['set-car!'] = function(s, x) {\n    return (s.car = x);\n  };\n  LISP['set-cdr!'] = function(s, x) {\n    return (s.cdr = x);\n  };\n\n  LISP['pair?'] = function(x) {\n    return jsBoolToS(x instanceof Cons);\n  };\n  LISP.list = function() {\n    var result = LISP.nil;\n    for (var i = arguments.length; --i >= 0; )\n      result = LISP.cons(arguments[i], result);\n    return result;\n  };\n  LISP['reverse!'] = function(x) {\n    var rev = LISP.nil;\n    for (var ls = x; LISP['pair?'](ls); ) {\n      var d = ls.cdr;\n      ls.cdr = rev;\n      rev = ls;\n      ls = d;\n    }\n    return rev;\n  };\n\n  LISP['number?'] = function(x) {\n    return jsBoolToS(typeof x === 'number');\n  };\n  LISP['number->string'] = function(x, n) {\n    return x.toString(n);\n  };\n  LISP['+'] = function() {\n    if (arguments.length == 0)\n      return 0;\n    var result = arguments[0];\n    for (var i = 1; i < arguments.length; ++i)\n      result += arguments[i];\n    return result;\n  };\n  LISP['*'] = function() {\n    if (arguments.length == 0)\n      return 1;\n    var result = arguments[0];\n    for (var i = 1; i < arguments.length; ++i)\n      result *= arguments[i];\n    return result;\n  };\n  LISP['-'] = function() {\n    if (arguments.length == 0)\n      return 0;\n    var result = arguments[0];\n    if (arguments.length == 1)\n      return -result;\n    for (var i = 1; i < arguments.length; ++i)\n      result -= arguments[i];\n    return result;\n  };\n  LISP['/'] = function() {\n    if (arguments.length == 0)\n      return 1;\n    var result = arguments[0];\n    if (arguments.length == 1)\n      return 1.0 / result;\n    for (var i = 1; i < arguments.length; ++i)\n      result /= arguments[i];\n    return result;\n  };\n  LISP['%'] = function() {\n    if (arguments.length == 0)\n      return 0;\n    var result = arguments[0];\n    if (arguments.length == 1)\n      return result;\n    for (var i = 1; i < arguments.length; ++i)\n      result %= arguments[i];\n    return result;\n  };\n  LISP['<'] = function() {\n    if (arguments.length > 0) {\n      var value = arguments[0];\n      for (var i = 1; i < arguments.length; ++i) {\n        var target = arguments[i];\n        if (!(value < target))\n          return LISP.nil;\n        value = target;\n      }\n    }\n    return LISP.t;\n  };\n  LISP['>'] = function() {\n    if (arguments.length > 0) {\n      var value = arguments[0];\n      for (var i = 1; i < arguments.length; ++i) {\n        var target = arguments[i];\n        if (!(value > target))\n          return LISP.nil;\n        value = target;\n      }\n    }\n    return LISP.t;\n  };\n  LISP['<='] = function() {\n    if (arguments.length > 0) {\n      var value = arguments[0];\n      for (var i = 1; i < arguments.length; ++i) {\n        var target = arguments[i];\n        if (!(value <= target))\n          return LISP.nil;\n        value = target;\n      }\n    }\n    return LISP.t;\n  };\n  LISP['>='] = function() {\n    if (arguments.length > 0) {\n      var value = arguments[0];\n      for (var i = 1; i < arguments.length; ++i) {\n        var target = arguments[i];\n        if (!(value >= target))\n          return LISP.nil;\n        value = target;\n      }\n    }\n    return LISP.t;\n  };\n\n  // String.\n  LISP['string?'] = function(x) {\n    return jsBoolToS(typeof x === 'string');\n  };\n  LISP['string=?'] = function(x, y) {\n    return jsBoolToS(x === y);\n  };\n  LISP['string-append'] = function() {\n    return arguments2Array(arguments, 0).join('');\n  };\n  LISP['string-join'] = function(list, separator) {\n    if (list === LISP.nil)\n      return '';\n    return list.toArray().join(separator);\n  };\n  LISP['string-length'] = function(str) {\n    return str.length;\n  };\n  LISP['string-ref'] = function(str, index) {\n    return str[index];\n  };\n  LISP.substring = function(str, start, end) {\n    return str.slice(start, end);\n  };\n  LISP['string-scan'] = function(str, item) {\n    var index = str.indexOf(item);\n    return index >= 0 ? index : LISP.nil;\n  };\n\n  LISP['char->integer'] = function(char, index) {\n    return char.charCodeAt(index);\n  };\n\n  var kEscapeCharTable = { '\\\\': '\\\\\\\\', '\\t': '\\\\t', '\\n': '\\\\n', '\"': '\\\\\"' };\n  var inspectString = function(str) {\n    var f = function(m) {\n      if (m in kEscapeCharTable)\n        return kEscapeCharTable[m];\n      return '\\\\x' + ('0' + m.charCodeAt(0).toString(16)).slice(-2);\n    };\n    return '\"' + str.replace(/[\\x00-\\x1f\"\\\\]/g, f) + '\"';\n  };\n\n  LISP['x->string'] = makeString;\n  LISP.print = function(x) {\n    LISP._output(makeString(x));\n    return x;\n  };\n  LISP.puts = function(x) {\n    LISP._output(makeString(x));\n    if (typeof(process) !== 'undefined')\n      LISP._output('\\n');\n    return x;\n  };\n  LISP.write = function(x) {\n    LISP._output(makeString(x, 10));  // 10 means true, and it is used as radix.\n    return x;\n  };\n\n  LISP.apply = function(fn) {\n    var params = [];\n    if (arguments.length > 1) {\n      for (var i = 1; i < arguments.length - 1; ++i)\n        params.push(arguments[i]);\n      // Last argument for `apply` is expected as list (or nil).\n      var last = arguments[arguments.length - 1];\n      if (last !== LISP.nil)\n        params = params.concat(last.toArray());\n    }\n    return fn.apply(null, params);\n  };\n  LISP.JS = global\n\n  LISP.HashTable = function() {};\n  LISP.HashTable.prototype = {\n    toString: function() {\n      var contents = '';\n      for (var k in this) {\n        if (!(this.hasOwnProperty(k)))\n          continue;\n        if (contents.length > 0)\n          contents += ', ';\n        contents += k + ':' + this[k];\n      }\n      return '#table<' + contents + '>';\n    },\n  };\n\n  // Hash table.\n  LISP['make-hash-table'] = function() {\n    return new LISP.HashTable();\n  };\n  LISP['hash-table?'] = function(x) {\n    return x instanceof LISP.HashTable;\n  };\n  LISP['hash-table-exists?'] = function(hash, x) {\n    return x in hash ? LISP.t : LISP.nil;\n  };\n  LISP['hash-table-get'] = function(hash, x) {\n    if (x in hash)\n      return hash[x];\n    return (arguments.length >= 3) ? arguments[3 - 1] : LISP.nil;\n  };\n  LISP['hash-table-put!'] = function(hash, x, value) {\n    return hash[x] = value;\n  };\n\n  // Vector.\n  LISP.vector = function() {\n    return arguments2Array(arguments, 0);\n  };\n  LISP['make-vector'] = function(count, value) {\n    if (value === undefined)\n      value = LISP.nil;\n    var vector = new Array(count);\n    for (var i = 0; i < count; ++i)\n      vector[i] = value;\n    return vector;\n  };\n  LISP['vector?'] = function(x) {\n    return jsBoolToS(x instanceof Array);\n  };\n  LISP['vector-length'] = function(vector) {\n    return vector.length;\n  };\n  LISP['vector-ref'] = function(vector, index) {\n    return vector[index];\n  };\n  LISP['vector-set!'] = function(vector, index, value) {\n    return vector[index] = value;\n  };\n\n  // Regexp.\n  LISP['regexp?'] = function(x) {\n    return jsBoolToS(x instanceof RegExp);\n  };\n  LISP.rxmatch = function(re, str) {\n    return jsBoolToS(re.exec(str));\n  };\n  LISP['regexp-replace-all'] = function(re, str, fn) {\n    if (!re.global) {\n      var s = re.toString()\n      var i = s.lastIndexOf('/')\n      re = new RegExp(s.slice(1, i), s.slice(i + 1) + 'g')\n    }\n    return str.replace(re, function(match) {\n      return fn(function() {  // TODO: handle arguments.\n        return match;\n      });\n    });\n  };\n  LISP['regexp->string'] = function(x) {\n    var s = x.toString();\n    return s.slice(1, s.length - 1);\n  };\n\n  // Stream.\n  var Stream = function() {\n    this.str = '';\n    this.lineNo = 0;\n  };\n  Stream.prototype = {\n    close: function() {},\n    peek: function() {\n      var result = this.fetch();\n      if (result == null)\n        return result;\n      return this.str[0];\n    },\n    getc: function() {\n      var c = this.peek();\n      if (c == null)\n        return c;\n      this.str = this.str.slice(1);\n      return c;\n    },\n    match: function(regexp, keep) {\n      var result = this.fetch();\n      if (result == null)\n        return result;\n\n      var m = this.str.match(regexp);\n      if (m && !keep)\n        this.str = RegExp.rightContext;\n      return m;\n    },\n    eof: function() {\n      return this.str == null;\n    },\n    getLine: function() {\n      var result = this.str || this.readLine();\n      this.str = '';\n      return result;\n    },\n    fetch: function() {\n      if (this.str == null)\n        return null;\n\n      if (this.str === '') {\n        if ((this.str = this.readLine()) == null)\n          return undefined;\n        ++this.lineNo;\n      }\n      return this.str;\n    },\n  };\n\n  var StrStream = function(str) {\n    Stream.call(this);\n    this.str = str;\n    this.lineNo = 1;\n  };\n  StrStream.prototype = Object.create(Stream.prototype);\n  StrStream.prototype.readLine = function() {\n    return null;\n  };\n  LISP.StrStream = StrStream;\n\n  // Reader.\n  LISP.NoCloseParenException = function() {};\n\n  var kDelimitors = '\\\\s(){}\\\\[\\\\]\\'`,;#\"';\n  var kReSingleDot = RegExp('^\\\\.(?=[' + kDelimitors + '])');\n  var kReSymbolOrNumber = RegExp('^([^' + kDelimitors + ']+)');\n  var kReadUnescapeTable = {\n    't': '\\t',\n    'n': '\\n',\n  };\n\n  var readTable = {};\n\n  var Reader = {\n    read: function(stream) {\n      do {\n        if (stream.eof())\n          return null;\n      } while (stream.match(/^\\s+/))\n\n      var c = stream.peek();\n      if (c in readTable)\n        return readTable[c](stream, stream.getc());\n\n      var m;\n      if (stream.match(/^\\(/))  // Left paren '('.\n        return Reader.readList(stream);\n      if (stream.match(/^;[^\\n]*\\n?/))  // Line comment.\n        return Reader.read(stream);\n      if (m = stream.match(/^\"((\\\\.|[^\"\\\\])*)\"/))  // string.\n        return Reader.unescape(m[1]);\n      if (stream.match(/^#\\(/))  // vector.\n        return Reader.readVector(stream);\n      if (m = stream.match(/^#\\/([^\\/]*)\\//))  // regexp TODO: Implement properly.\n        return new RegExp(m[1]);\n      if (stream.match(/^#\\|(.|[\\n\\r])*?\\|#/))  // Block comment.\n        return Reader.read(stream);\n      if (stream.match(kReSingleDot, true))  // Single dot.\n        return undefined;\n      if (m = stream.match(kReSymbolOrNumber))  // Symbol or number.\n        return Reader.readSymbolOrNumber(m[1]);\n      return undefined;\n    },\n\n    readSymbolOrNumber: function(str) {\n      if (str === 'nil')\n        return LISP.nil;\n      if (str === 't')\n        return LISP.t;\n      if (str[0] === ':')\n        return LISP['make-keyword'](str.slice(1));\n      if (str.match(/^([+\\-]?[0-9]+(\\.[0-9]*)?)$/))  // Number.\n        return parseFloat(str);\n      return LISP.intern(str);\n    },\n\n    readList: function(stream) {\n      var result = LISP.nil;\n      for (;;) {\n        var x = Reader.read(stream);\n        if (x != null) {\n          result = new Cons(x, result, stream.lineNo, stream.path);\n          continue;\n        }\n\n        if (stream.match(/^\\s*\\)/)) {  // Close paren.\n          return LISP['reverse!'](result);\n        }\n        if (stream.match(kReSingleDot)) {  // Dot.\n          var last = Reader.read(stream);\n          if (last != null) {\n            if (stream.match(/^\\s*\\)/)) {  // Close paren.\n              var reversed = LISP['reverse!'](result);\n              result.cdr = last;\n              return reversed;\n            }\n          }\n        }\n        // Error\n        throw new LISP.NoCloseParenException();\n      }\n    },\n\n    readVector: function(stream) {\n      var result = [];\n      for (;;) {\n        var x = Reader.read(stream);\n        if (x !== undefined) {\n          result.push(x);\n          continue;\n        }\n\n        if (stream.match(/^\\s*\\)/)) {  // Close paren.\n          return result;\n        }\n        // Error\n        throw new LISP.NoCloseParenException();\n      }\n    },\n\n    unescape: function(str) {\n      return str.replace(/\\\\(x([0-9a-fA-F]{2})|(.))/g, function(_1, _2, hex, c) {\n        if (hex)\n          return String.fromCharCode(parseInt(hex, 16));\n        if (c in kReadUnescapeTable)\n          return kReadUnescapeTable[c];\n        return c;\n      });\n    },\n  };\n\n  LISP['set-macro-character'] = function(c, fn) {\n    readTable[c] = fn;\n  };\n\n  LISP['set-macro-character'](\"'\", function(stream, c) {\n    return LISP.list(LISP.intern('quote'), Reader.read(stream));\n  });\n  LISP['set-macro-character']('`', function(stream, c) {\n    return LISP.list(LISP.intern('quasiquote'), Reader.read(stream));\n  });\n  LISP['set-macro-character'](',', function(stream, c) {\n    var c = stream.peek();\n    var keyword = 'unquote';\n    if (c == '@') {\n      keyword = 'unquote-splicing';\n      stream.getc();\n    }\n    return LISP.list(LISP.intern(keyword), Reader.read(stream));\n  });\n\n  LISP.read = function(stream) {\n    return Reader.read(stream || LISP['*stdin*']);\n  };\n\n  LISP['read-from-string'] = function(str) {\n    return Reader.read(new StrStream(str));\n  };\n\n  LISP['read-line'] = function(stream) {\n    return (stream || LISP['*stdin*']).getLine();\n  };\n\n\n  // For node JS.\n  if (typeof process !== 'undefined') {\n    var fs = require('fs');\n\n    LISP.FileStream = (function() {\n      var BUFFER_SIZE = 4096;\n      var buffer = new Buffer(BUFFER_SIZE);\n      var FileStream = function(fd, path) {\n        Stream.call(this);\n        this.fd = fd;\n        this.path = path;\n        this.lines = [];\n        this.index = 0;\n      };\n      FileStream.prototype = Object.create(Stream.prototype);\n      FileStream.prototype.close = function() {\n        if (this.fd == null)\n          return;\n        fs.closeSync(this.fd);\n        this.fd = null;\n        this.lines.length = this.index = 0;\n        this.str = null;\n        this.chomped = false;\n      };\n      FileStream.prototype.readLine = function() {\n        for (;;) {\n          var left = '';\n          if (this.index < this.lines.length) {\n            if (this.index < this.lines.length - 1 || !this.chomped)\n              return this.lines[this.index++];\n            if (this.chomped)\n              left = this.lines[this.index];\n          }\n\n          if (this.fd == null)\n            return LISP.nil;\n          var n = fs.readSync(this.fd, buffer, 0, BUFFER_SIZE);\n          if (n <= 0)\n            return null;\n          var string = left + buffer.slice(0, n).toString();\n          this.chomped = false;\n          if (string.length > 0) {\n            if (string[string.length - 1] != '\\n')\n              this.chomped = true;\n            else\n              string = string.slice(0, string.length - 1);  // Remove last '\\n' to avoid last empty line.\n          }\n          this.lines = string.split('\\n');\n          this.index = 0;\n        }\n      };\n      return FileStream;\n    })();\n\n    LISP['*stdin*'] = new LISP.FileStream(process.stdin.fd, '*stdin*');\n    LISP['*stdout*'] = new LISP.FileStream(process.stdout.fd, '*stdout*');\n    LISP['*stderr*'] = new LISP.FileStream(process.stderr.fd, '*stderr*');\n\n    LISP.open = function(path, flag) {\n      try {\n        var fd = fs.openSync(path, flag || 'r');\n        return new LISP.FileStream(fd, path);\n      } catch (e) {\n        return LISP.nil;\n      }\n    };\n\n    LISP.close = function(stream) {\n      stream.close();\n      return stream;\n    };\n\n    LISP.load = function(fileName) {\n      var stream = LISP.open(fileName);\n      if (!stream) {\n        return LISP.error('Cannot open [' + fileName + ']');\n      }\n\n      if (stream.match(/^#!/, true))\n        stream.getLine();  // Skip Shebang.\n\n      var result;\n      for (;;) {\n        var s = LISP.read(stream);\n        if (s == null)\n          break;\n        result = LISP.eval(s);\n      }\n      LISP.close(stream);\n      return result;\n    };\n\n    // System\n    LISP.exit = function(code) {\n      process.exit(code);\n    };\n\n    LISP.jsrequire = require;\n  }\n\n  /*==== EMBED COMPILED CODE HERE ====*/\nLISP[\"register-macro\"](LISP.intern(\"defmacro\"), (function(name, params){var body = LISP._getRestArgs(arguments, 2); return (LISP.list(LISP.intern(\"register-macro\"), LISP.list(LISP.intern(\"quote\"), name), LISP[\"list*\"](LISP.intern(\"lambda\"), params, body)));}));\nLISP[\"register-macro\"](LISP.intern(\"defun\"), (function(name, params){var body = LISP._getRestArgs(arguments, 2); return (LISP.list(LISP.intern(\"def\"), name, LISP[\"list*\"](LISP.intern(\"lambda\"), params, body)));}));\nLISP[\"register-macro\"](LISP.intern(\"let\"), (function(pairs){var body = LISP._getRestArgs(arguments, 1); return ((LISP.isTrue(LISP[\"symbol?\"](pairs)) ? ((function() { var __2 = LISP.list(LISP.nil); return (function(name, pairs, body){return (LISP[\"list*\"](LISP.list(LISP.intern(\"lambda\"), LISP.list(name), LISP.list(LISP.intern(\"set!\"), name, LISP[\"list*\"](LISP.intern(\"lambda\"), LISP.map(LISP.car, pairs), body)), LISP[\"list*\"](name, LISP.map(LISP.cadr, pairs))), __2));}); })()(pairs, LISP.car(body), LISP.cdr(body))) : (LISP[\"list*\"](LISP[\"list*\"](LISP.intern(\"lambda\"), LISP.map(LISP.car, pairs), body), LISP.map(LISP.cadr, pairs)))));}));\nLISP[\"register-macro\"](LISP.intern(\"let1\"), (function(name, value){var body = LISP._getRestArgs(arguments, 2); return (LISP[\"list*\"](LISP.intern(\"let\"), LISP.list(LISP.list(name, value)), body));}));\nLISP[\"register-macro\"](LISP.intern(\"let*\"), (function(pairs){var body = LISP._getRestArgs(arguments, 1); return ((LISP.isTrue(LISP[\"null?\"](pairs)) ? (LISP[\"list*\"](LISP.intern(\"do\"), body)) : (LISP.list(LISP.intern(\"let1\"), LISP.caar(pairs), LISP.cadar(pairs), LISP[\"list*\"](LISP.intern(\"let*\"), LISP.cdr(pairs), body)))));}));\nLISP[\"register-macro\"](LISP.intern(\"when\"), (function(pred){var body = LISP._getRestArgs(arguments, 1); return (LISP.list(LISP.intern(\"if\"), pred, LISP[\"list*\"](LISP.intern(\"do\"), body)));}));\nLISP[\"register-macro\"](LISP.intern(\"unless\"), (function(pred){var body = LISP._getRestArgs(arguments, 1); return (LISP.list(LISP.intern(\"if\"), pred, LISP.nil, LISP[\"list*\"](LISP.intern(\"do\"), body)));}));\nLISP[\"register-macro\"](LISP.intern(\"cond\"), (function(){var clauses = LISP._getRestArgs(arguments, 0); return ((LISP.isTrue(LISP[\"null?\"](clauses)) ? (LISP.nil) : ((function(clause, rest){return ((LISP.isTrue(LISP[\"eq?\"](LISP.car(clause), LISP.t)) ? (LISP[\"list*\"](LISP.intern(\"do\"), LISP.cdr(clause))) : ((LISP.isTrue(LISP[\"null?\"](LISP.cdr(clause))) ? ((function(g){return (LISP.list(LISP.intern(\"let\"), LISP.list(LISP.list(g, LISP.car(clause))), LISP.list(LISP.intern(\"if\"), g, g, LISP[\"list*\"](LISP.intern(\"cond\"), rest))));})(LISP.gensym())) : ((LISP.isTrue(LISP[\"eq?\"](LISP.cadr(clause), LISP.intern(\"=>\"))) ? ((function(g){return (LISP.list(LISP.intern(\"let\"), LISP.list(LISP.list(g, LISP.car(clause))), LISP.list(LISP.intern(\"if\"), g, LISP.list(LISP.caddr(clause), g), LISP[\"list*\"](LISP.intern(\"cond\"), rest))));})(LISP.gensym())) : (LISP.list(LISP.intern(\"if\"), LISP.car(clause), LISP[\"list*\"](LISP.intern(\"do\"), LISP.cdr(clause)), LISP[\"list*\"](LISP.intern(\"cond\"), rest)))))))));})(LISP.car(clauses), LISP.cdr(clauses)))));}));\nLISP[\"register-macro\"](LISP.intern(\"case\"), (function(x){var clauses = LISP._getRestArgs(arguments, 1); return ((function(value){return (LISP.list(LISP.intern(\"let1\"), value, x, LISP[\"list*\"](LISP.intern(\"cond\"), LISP.map((function(clause){return ((LISP.isTrue(LISP[\"eq?\"](LISP.car(clause), LISP.t)) ? (clause) : ((LISP.isTrue(LISP[\"null?\"](LISP.cdar(clause))) ? (LISP[\"list*\"](LISP.list(LISP.intern(\"eq?\"), value, LISP.list(LISP.intern(\"quote\"), LISP.caar(clause))), LISP.cdr(clause))) : (LISP[\"list*\"](LISP.list(LISP.intern(\"member\"), value, LISP.list(LISP.intern(\"quote\"), LISP.car(clause))), LISP.cdr(clause)))))));}), clauses))));})(LISP.gensym()));}));\nLISP[\"register-macro\"](LISP.intern(\"and\"), (function() { var __3 = LISP.list(LISP.nil); return (function(){var args = LISP._getRestArgs(arguments, 0); return ((LISP.isTrue(LISP[\"null?\"](args)) ? (LISP.t) : ((LISP.isTrue(LISP[\"null?\"](LISP.cdr(args))) ? (LISP.car(args)) : (LISP[\"list*\"](LISP.intern(\"if\"), LISP.car(args), LISP[\"list*\"](LISP.intern(\"and\"), LISP.cdr(args)), __3))))));}); })());\nLISP[\"register-macro\"](LISP.intern(\"or\"), (function(){var args = LISP._getRestArgs(arguments, 0); return ((LISP.isTrue(LISP[\"null?\"](LISP.cdr(args))) ? (LISP.car(args)) : ((function(g){return (LISP.list(LISP.intern(\"let1\"), g, LISP.car(args), LISP.list(LISP.intern(\"if\"), g, g, LISP[\"list*\"](LISP.intern(\"or\"), LISP.cdr(args)))));})(LISP.gensym()))));}));\nLISP[\"register-macro\"](LISP.intern(\"do\"), (function(){var body = LISP._getRestArgs(arguments, 0); return ((LISP.isTrue(LISP[\"null?\"](body)) ? (LISP.nil) : ((LISP.isTrue(LISP[\"null?\"](LISP.cdr(body))) ? (LISP.car(body)) : (LISP[\"list*\"](LISP.intern(\"let\"), LISP.nil, body))))));}));\nLISP[\"register-macro\"](LISP.intern(\"aif\"), (function(expr, thn){var els = LISP._getRestArgs(arguments, 2); return (LISP.list(LISP.intern(\"let1\"), LISP.intern(\"it\"), expr, LISP[\"list*\"](LISP.intern(\"if\"), LISP.intern(\"it\"), thn, els)));}));\nLISP[\"register-macro\"](LISP.intern(\"awhen\"), (function(expr){var body = LISP._getRestArgs(arguments, 1); return (LISP.list(LISP.intern(\"aif\"), expr, LISP[\"list*\"](LISP.intern(\"do\"), body)));}));\nLISP[\"register-macro\"](LISP.intern(\"awhile\"), (function(expr){var body = LISP._getRestArgs(arguments, 1); return ((function(loop){return (LISP.list(LISP.intern(\"let\"), loop, LISP.nil, LISP.list(LISP.intern(\"let1\"), LISP.intern(\"it\"), expr, LISP[\"list*\"](LISP.intern(\"when\"), LISP.intern(\"it\"), LISP.append(body, LISP.list(LISP.list(loop)))))));})(LISP.gensym()));}));\nLISP[\"null?\"] = (function(x){return (LISP[\"eq?\"](x, LISP.nil));});\nLISP.not = (function(x){return (LISP[\"eq?\"](x, LISP.nil));});\nLISP.caar = (function(x){return (LISP.car(LISP.car(x)));});\nLISP.cadr = (function(x){return (LISP.car(LISP.cdr(x)));});\nLISP.cdar = (function(x){return (LISP.cdr(LISP.car(x)));});\nLISP.cddr = (function(x){return (LISP.cdr(LISP.cdr(x)));});\nLISP.cadar = (function(x){return (LISP.cadr(LISP.car(x)));});\nLISP.caddr = (function(x){return (LISP.car(LISP.cddr(x)));});\nLISP.cdddr = (function(x){return (LISP.cdr(LISP.cddr(x)));});\nLISP[\"equal?\"] = (function(x, y){return ((LISP.isTrue(LISP[\"eq?\"](x, y)) ? (LISP.t) : ((function(xtype){return ((LISP.isTrue(LISP[\"eq?\"](xtype, LISP.type(y))) ? ((function(__4){return ((LISP.isTrue(LISP[\"eq?\"](__4, LISP.intern(\"pair\"))) ? ((LISP.isTrue(LISP[\"equal?\"](LISP.car(x), LISP.car(y))) ? (LISP[\"equal?\"](LISP.cdr(x), LISP.cdr(y))) : (LISP.nil))) : ((LISP.isTrue(LISP[\"eq?\"](__4, LISP.intern(\"vector\"))) ? ((function(n){return ((LISP.isTrue(LISP[\"eq?\"](n, LISP[\"vector-length\"](y))) ? ((function(loop){return (loop = (function(i){return ((function(__5){return ((LISP.isTrue(__5) ? (__5) : ((LISP.isTrue(LISP[\"equal?\"](LISP[\"vector-ref\"](x, i), LISP[\"vector-ref\"](y, i))) ? (loop((i + 1))) : (LISP.nil)))));})(LISP[\">=\"](i, n)));}), loop(0));})(LISP.nil)) : (LISP.nil)));})(LISP[\"vector-length\"](x))) : (LISP.nil)))));})(xtype)) : (LISP.nil)));})(LISP.type(x)))));});\nLISP.length = (function(ls){return ((function(loop){return (loop = (function(ls, acc){return ((LISP.isTrue(LISP[\"pair?\"](ls)) ? (loop(LISP.cdr(ls), (acc + 1))) : (acc)));}), loop(ls, 0));})(LISP.nil));});\nLISP[\"last-pair\"] = (function(ls){return ((LISP.isTrue(LISP[\"pair?\"](LISP.cdr(ls))) ? (LISP[\"last-pair\"](LISP.cdr(ls))) : (ls)));});\nLISP.member = (function(x, ls){return ((LISP.isTrue(LISP[\"null?\"](ls)) ? (LISP.nil) : ((LISP.isTrue(LISP[\"eq?\"](x, LISP.car(ls))) ? (ls) : (LISP.member(x, LISP.cdr(ls)))))));});\nLISP.assoc = (function(x, ls){return ((LISP.isTrue(LISP[\"null?\"](ls)) ? (LISP.nil) : ((LISP.isTrue(LISP[\"eq?\"](x, LISP.caar(ls))) ? (LISP.car(ls)) : (LISP.assoc(x, LISP.cdr(ls)))))));});\nLISP.acons = (function(key, datum, alist){return (LISP.cons(LISP.cons(key, datum), alist));});\nLISP.map = (function(f, ls){return ((LISP.isTrue(LISP[\"null?\"](ls)) ? (LISP.nil) : (LISP.cons(f(LISP.car(ls)), LISP.map(f, LISP.cdr(ls))))));});\nLISP.append = (function(ls){var rest = LISP._getRestArgs(arguments, 1); return ((LISP.isTrue(LISP[\"null?\"](rest)) ? (ls) : ((LISP.isTrue(LISP[\"null?\"](ls)) ? (LISP.apply(LISP.append, rest)) : (LISP.cons(LISP.car(ls), LISP.apply(LISP.append, LISP.cdr(ls), rest)))))));});\nLISP.reverse = (function(ls){return ((function(loop){return (loop = (function(ls, acc){return ((LISP.isTrue(LISP[\"pair?\"](ls)) ? (loop(LISP.cdr(ls), LISP.cons(LISP.car(ls), acc))) : (acc)));}), loop(ls, LISP.nil));})(LISP.nil));});\nLISP[\"list*\"] = (function(){var args = LISP._getRestArgs(arguments, 0); return ((LISP.isTrue(LISP[\"null?\"](args)) ? (LISP.nil) : ((LISP.isTrue(LISP[\"null?\"](LISP.cdr(args))) ? (LISP.car(args)) : ((function(loop){return (loop = (function(p, q){return ((LISP.isTrue(LISP[\"null?\"](LISP.cdr(q))) ? ((function(){return (LISP[\"set-cdr!\"](p, LISP.car(q)), args);})()) : (loop(q, LISP.cdr(q)))));}), loop(args, LISP.cdr(args)));})(LISP.nil))))));});\nLISP[\"last-pair\"] = (function(ls){return ((LISP.isTrue(LISP[\"pair?\"](LISP.cdr(ls))) ? (LISP[\"last-pair\"](LISP.cdr(ls))) : (ls)));});\nLISP[\"proper-list?\"] = (function(ls){return ((LISP.isTrue(LISP[\"pair?\"](ls)) ? (LISP[\"null?\"](LISP.cdr(LISP[\"last-pair\"](ls)))) : (LISP.nil)));});\nLISP[\"dotted->proper\"] = (function(ls){return ((LISP.isTrue(LISP[\"pair?\"](ls)) ? ((LISP.isTrue(LISP[\"proper-list?\"](ls)) ? (ls) : ((function(dot, rev){return ((function(dup){return (LISP[\"set-cdr!\"](rev, LISP.list(dot)), dup);})(LISP[\"reverse!\"](rev)));})(LISP.cdr(LISP[\"last-pair\"](ls)), LISP.reverse(ls))))) : (LISP.list(ls))));});\nLISP[\"vector->list\"] = (function(vect){return ((function(loop){return (loop = (function(i, acc){return ((LISP.isTrue(LISP[\"<\"](i, 0)) ? (acc) : (loop((i - 1), LISP.cons(LISP[\"vector-ref\"](vect, i), acc)))));}), loop((LISP[\"vector-length\"](vect) - 1), LISP.nil));})(LISP.nil));});\nLISP[\"position-if\"] = (function(pred, seq){return ((function(loop){return (loop = (function(p, i){return ((LISP.isTrue(p) ? ((LISP.isTrue(pred(LISP.car(p))) ? (i) : (loop(LISP.cdr(p), (i + 1))))) : (LISP.nil)));}), loop(seq, 0));})(LISP.nil));});\nLISP.take = (function(n, ls){return ((function(loop){return (loop = (function(n, ls, acc){return ((LISP.isTrue((function(__6){return ((LISP.isTrue(__6) ? (__6) : (LISP[\"null?\"](ls))));})(LISP[\"<=\"](n, 0))) ? (LISP[\"reverse!\"](acc)) : (loop((n - 1), LISP.cdr(ls), LISP.cons(LISP.car(ls), acc)))));}), loop(n, ls, LISP.nil));})(LISP.nil));});\nLISP.drop = (function(n, ls){return ((LISP.isTrue((function(__7){return ((LISP.isTrue(__7) ? (__7) : (LISP[\"null?\"](ls))));})(LISP[\"<=\"](n, 0))) ? (ls) : (LISP.drop((n - 1), LISP.cdr(ls)))));});\nLISP.elt = (function(n, ls){return (LISP.car(LISP.drop(n, ls)));});\nLISP[\"remove-if\"] = (function(test, seq){return ((function(loop){return (loop = (function(seq, acc){return ((LISP.isTrue(LISP[\"null?\"](seq)) ? (LISP[\"reverse!\"](acc)) : (loop(LISP.cdr(seq), (LISP.isTrue(test(LISP.car(seq))) ? (acc) : (LISP.cons(LISP.car(seq), acc)))))));}), loop(seq, LISP.nil));})(LISP.nil));});\nLISP[\"register-macro\"](LISP.intern(\"dotimes\"), (function(params){var body = LISP._getRestArgs(arguments, 1); return ((function() { var __8 = LISP.list(0), __9 = LISP.list(1); return (function(i, limit, loop){return (LISP.list(LISP.intern(\"let1\"), limit, LISP.cadr(params), LISP.list(LISP.intern(\"let\"), loop, LISP.list(LISP[\"list*\"](i, __8)), LISP.list(LISP.intern(\"if\"), LISP.list(LISP.intern(\"<\"), i, limit), LISP[\"list*\"](LISP.intern(\"do\"), LISP.append(body, LISP.list(LISP.list(loop, LISP[\"list*\"](LISP.intern(\"+\"), i, __9))))), LISP.caddr(params)))));}); })()(LISP.car(params), LISP.gensym(), LISP.gensym()));}));\nLISP[\"register-macro\"](LISP.intern(\"dolist\"), (function(pair){var body = LISP._getRestArgs(arguments, 1); return ((function(i, loop, ls){return (LISP.list(LISP.intern(\"let\"), loop, LISP.list(LISP.list(ls, LISP.cadr(pair))), LISP.list(LISP.intern(\"let1\"), i, LISP.list(LISP.intern(\"car\"), ls), LISP[\"list*\"](LISP.intern(\"when\"), i, LISP.append(body, LISP.list(LISP.list(loop, LISP.list(LISP.intern(\"cdr\"), ls))))))));})(LISP.car(pair), LISP.gensym(), LISP.gensym()));}));\nLISP[\"register-macro\"](LISP.intern(\"labels\"), (function(lss){var body = LISP._getRestArgs(arguments, 1); return (LISP[\"list*\"](LISP.intern(\"let\"), LISP.map((function(ls){return (LISP.car(ls));}), lss), LISP.append(LISP.map((function(ls){return (LISP.list(LISP.intern(\"set!\"), LISP.car(ls), LISP[\"list*\"](LISP.intern(\"lambda\"), LISP.cdr(ls))));}), lss), body)));}));\nLISP.nreconc = (function(ls, tail){return ((function(top){return (LISP[\"set-cdr!\"](ls, tail), top);})(LISP[\"reverse!\"](ls)));});\nLISP.any = (function(f, ls){return ((LISP.isTrue(LISP[\"null?\"](ls)) ? (LISP.nil) : ((LISP.isTrue(f(LISP.car(ls))) ? (LISP.t) : (LISP.any(f, LISP.cdr(ls)))))));});\nLISP.every = (function(f, ls){return ((LISP.isTrue(LISP[\"null?\"](ls)) ? (LISP.t) : ((LISP.isTrue(f(LISP.car(ls))) ? (LISP.every(f, LISP.cdr(ls))) : (LISP.nil)))));});\nLISP[\"*bq-clobberable*\"] = LISP.gensym();\nLISP[\"*bq-quote-nil*\"] = LISP.list(LISP.intern(\"quote\"), LISP.nil);\nLISP[\"register-macro\"](LISP.intern(\"quasiquote\"), (function(x){return (LISP[\"bq-completely-process\"](x));}));\nLISP[\"bq-completely-process\"] = (function(x){return (LISP[\"bq-simplify\"](LISP[\"bq-process\"](x)));});\nLISP[\"bq-process\"] = (function(x){return ((LISP.isTrue(LISP.not(LISP[\"pair?\"](x))) ? (LISP.list(LISP.intern(\"quote\"), x)) : ((LISP.isTrue(LISP[\"eq?\"](LISP.car(x), LISP.intern(\"quasiquote\"))) ? (LISP[\"bq-process\"](LISP[\"bq-completely-process\"](LISP.cadr(x)))) : ((LISP.isTrue(LISP[\"eq?\"](LISP.car(x), LISP.intern(\"unquote\"))) ? (LISP.cadr(x)) : ((LISP.isTrue(LISP[\"eq?\"](LISP.car(x), LISP.intern(\"unquote-splicing\"))) ? (LISP.error(\",@~S after `\", LISP.cadr(x))) : ((LISP.isTrue(LISP[\"eq?\"](LISP.car(x), LISP.intern(\"unquote-dot\"))) ? (LISP.error(\",.~S after `\", LISP.cadr(x))) : ((function(loop){return (loop = (function(p, q){return ((LISP.isTrue(LISP.not(LISP[\"pair?\"](p))) ? (LISP.cons(LISP.intern(\"append\"), LISP.nreconc(q, LISP.list(LISP.list(LISP.intern(\"quote\"), p))))) : ((LISP.isTrue(LISP[\"eq?\"](LISP.car(p), LISP.intern(\"unquote\"))) ? ((function(){return ((LISP.isTrue(LISP[\"null?\"](LISP.cddr(p))) ? (LISP.nil) : (LISP.error(\"Malformed ,~S\", p))), LISP.cons(LISP.intern(\"append\"), LISP.nreconc(q, LISP.list(LISP.cadr(p)))));})()) : ((function(){return ((LISP.isTrue(LISP[\"eq?\"](LISP.car(p), LISP.intern(\"unquote-splicing\"))) ? (LISP.error(\"Dotted ,@~S\", p)) : (LISP.nil)), (LISP.isTrue(LISP[\"eq?\"](LISP.car(p), LISP.intern(\"unquote-dot\"))) ? (LISP.error(\"Dotted ,.~S\", p)) : (LISP.nil)), loop(LISP.cdr(p), LISP.cons(LISP.bracket(LISP.car(p)), q)));})())))));}), loop(x, LISP.nil));})(LISP.nil))))))))))));});\nLISP.bracket = (function(x){return ((LISP.isTrue(LISP.not(LISP[\"pair?\"](x))) ? (LISP.list(LISP.intern(\"list\"), LISP[\"bq-process\"](x))) : ((LISP.isTrue(LISP[\"eq?\"](LISP.car(x), LISP.intern(\"unquote\"))) ? (LISP.list(LISP.intern(\"list\"), LISP.cadr(x))) : ((LISP.isTrue(LISP[\"eq?\"](LISP.car(x), LISP.intern(\"unquote-splicing\"))) ? (LISP.cadr(x)) : ((LISP.isTrue(LISP[\"eq?\"](LISP.car(x), LISP.intern(\"unquote-dot\"))) ? (LISP.list(LISP[\"*bq-clobberable*\"], LISP.cadr(x))) : (LISP.list(LISP.intern(\"list\"), LISP[\"bq-process\"](x)))))))))));});\nLISP.maptree = (function(fn, x){return ((LISP.isTrue(LISP.not(LISP[\"pair?\"](x))) ? (fn(x)) : ((function(a, d){return ((LISP.isTrue((LISP.isTrue(LISP[\"equal?\"](a, LISP.car(x))) ? (LISP[\"equal?\"](d, LISP.cdr(x))) : (LISP.nil))) ? (x) : (LISP.cons(a, d))));})(fn(LISP.car(x)), LISP.maptree(fn, LISP.cdr(x))))));});\nLISP[\"bq-splicing-frob\"] = (function(x){return ((LISP.isTrue(LISP[\"pair?\"](x)) ? ((function(__2){return ((LISP.isTrue(__2) ? (__2) : (LISP[\"eq?\"](LISP.car(x), LISP.intern(\"unquote-dot\")))));})(LISP[\"eq?\"](LISP.car(x), LISP.intern(\"unquote-splicing\")))) : (LISP.nil)));});\nLISP[\"bq-frob\"] = (function(x){return ((LISP.isTrue(LISP[\"pair?\"](x)) ? ((function(__3){return ((LISP.isTrue(__3) ? (__3) : ((function(__4){return ((LISP.isTrue(__4) ? (__4) : (LISP[\"eq?\"](LISP.car(x), LISP.intern(\"unquote-dot\")))));})(LISP[\"eq?\"](LISP.car(x), LISP.intern(\"unquote-splicing\"))))));})(LISP[\"eq?\"](LISP.car(x), LISP.intern(\"unquote\")))) : (LISP.nil)));});\nLISP[\"bq-simplify\"] = (function(x){return ((LISP.isTrue(LISP[\"pair?\"](x)) ? ((function(x){return ((LISP.isTrue(LISP.not(LISP[\"eq?\"](LISP.car(x), LISP.intern(\"append\")))) ? (x) : (LISP[\"bq-simplify-args\"](x))));})((LISP.isTrue(LISP[\"eq?\"](LISP.car(x), LISP.intern(\"quote\"))) ? (x) : (LISP.maptree(LISP[\"bq-simplify\"], x))))) : (x)));});\nLISP[\"bq-simplify-args\"] = (function(x){return ((function(loop){return (loop = (function(args, result){return ((LISP.isTrue(LISP.not(LISP[\"null?\"](args))) ? (loop(LISP.cdr(args), (LISP.isTrue(LISP.not(LISP[\"pair?\"](LISP.car(args)))) ? (LISP[\"bq-attach-append\"](LISP.intern(\"append\"), LISP.car(args), result)) : ((LISP.isTrue((LISP.isTrue(LISP[\"eq?\"](LISP.caar(args), LISP.intern(\"list\"))) ? (LISP.not(LISP.any(LISP[\"bq-splicing-frob\"], LISP.cdar(args)))) : (LISP.nil))) ? (LISP[\"bq-attach-conses\"](LISP.cdar(args), result)) : ((LISP.isTrue((LISP.isTrue(LISP[\"eq?\"](LISP.caar(args), LISP.intern(\"list*\"))) ? (LISP.not(LISP.any(LISP[\"bq-splicing-frob\"], LISP.cdar(args)))) : (LISP.nil))) ? (LISP[\"bq-attach-conses\"](LISP.reverse(LISP.cdr(LISP.reverse(LISP.cdar(args)))), LISP[\"bq-attach-append\"](LISP.intern(\"append\"), LISP.car(LISP.last(LISP.car(args))), result))) : ((LISP.isTrue((LISP.isTrue(LISP[\"eq?\"](LISP.caar(args), LISP.intern(\"quote\"))) ? ((LISP.isTrue(LISP[\"pair?\"](LISP.cadar(args))) ? ((LISP.isTrue(LISP.not(LISP[\"bq-frob\"](LISP.cadar(args)))) ? (LISP.not(LISP.cddar(args))) : (LISP.nil))) : (LISP.nil))) : (LISP.nil))) ? (LISP[\"bq-attach-conses\"](LISP.list(LISP.list(LISP.intern(\"quote\"), LISP.caadar(args))), result)) : ((LISP.isTrue(LISP[\"eq?\"](LISP.caar(args), LISP[\"*bq-clobberable*\"])) ? (LISP[\"bq-attach-append\"](LISP.intern(\"append!\"), LISP.cadar(args), result)) : (LISP[\"bq-attach-append\"](LISP.intern(\"append\"), LISP.car(args), result))))))))))))) : (result)));}), loop(LISP.reverse(LISP.cdr(x)), LISP.nil));})(LISP.nil));});\nLISP[\"null-or-quoted\"] = (function(x){return ((function(__5){return ((LISP.isTrue(__5) ? (__5) : ((LISP.isTrue(LISP[\"pair?\"](x)) ? (LISP[\"eq?\"](LISP.car(x), LISP.intern(\"quote\"))) : (LISP.nil)))));})(LISP[\"null?\"](x)));});\nLISP[\"bq-attach-append\"] = (function(op, item, result){return ((LISP.isTrue((LISP.isTrue(LISP[\"null-or-quoted\"](item)) ? (LISP[\"null-or-quoted\"](result)) : (LISP.nil))) ? (LISP.list(LISP.intern(\"quote\"), LISP.append(LISP.cadr(item), LISP.cadr(result)))) : ((LISP.isTrue((function(__6){return ((LISP.isTrue(__6) ? (__6) : (LISP[\"equal?\"](result, LISP[\"*bq-quote-nil*\"]))));})(LISP[\"null?\"](result))) ? ((LISP.isTrue(LISP[\"bq-splicing-frob\"](item)) ? (LISP.list(op, item)) : (item))) : ((LISP.isTrue((LISP.isTrue(LISP[\"pair?\"](result)) ? (LISP[\"eq?\"](LISP.car(result), op)) : (LISP.nil))) ? (LISP[\"list*\"](LISP.car(result), item, LISP.cdr(result))) : (LISP.list(op, item, result))))))));});\nLISP[\"bq-attach-conses\"] = (function(items, result){return ((LISP.isTrue((LISP.isTrue(LISP.every(LISP[\"null-or-quoted\"], items)) ? (LISP[\"null-or-quoted\"](result)) : (LISP.nil))) ? (LISP.list(LISP.intern(\"quote\"), LISP.append(LISP.map(LISP.cadr, items), LISP.cadr(result)))) : ((LISP.isTrue((function(__7){return ((LISP.isTrue(__7) ? (__7) : (LISP[\"equal?\"](result, LISP[\"*bq-quote-nil*\"]))));})(LISP[\"null?\"](result))) ? (LISP.cons(LISP.intern(\"list\"), items)) : ((LISP.isTrue((LISP.isTrue(LISP[\"pair?\"](result)) ? ((function(__8){return ((LISP.isTrue(__8) ? (__8) : (LISP[\"eq?\"](LISP.car(result), LISP.intern(\"list*\")))));})(LISP[\"eq?\"](LISP.car(result), LISP.intern(\"list\")))) : (LISP.nil))) ? (LISP.cons(LISP.car(result), LISP.append(items, LISP.cdr(result)))) : (LISP.cons(LISP.intern(\"list*\"), LISP.append(items, LISP.list(result))))))))));});\nLISP.macroexpand = (function(exp){return ((function(expanded){return ((LISP.isTrue(LISP[\"equal?\"](expanded, exp)) ? (exp) : (LISP.macroexpand(expanded))));})(LISP[\"macroexpand-1\"](exp)));});\nLISP[\"create-scope\"] = (function(parent$2dscope, params){return (LISP.vector(LISP[\"remove-if\"]((function() { var __2 = LISP.list(LISP.intern(\"&rest\"), LISP.intern(\"&body\")); return (function(x){return (LISP.member(x, __2));}); })(), params), LISP.nil, parent$2dscope));});\nLISP[\"scope-param\"] = (function(scope){return (LISP[\"vector-ref\"](scope, 0));});\nLISP[\"scope-outer\"] = (function(scope){return (LISP[\"vector-ref\"](scope, 2));});\nLISP[\"scope-add-var\"] = (function(scope, val){return ((function(x){return (LISP[\"vector-set!\"](scope, 1, LISP.cons(LISP.cons(x, val), LISP[\"vector-ref\"](scope, 1))), LISP[\"vector-set!\"](scope, 0, LISP.cons(x, LISP[\"vector-ref\"](scope, 0))), x);})(LISP.gensym()));});\nLISP[\"scope-get-var\"] = (function(scope){return (LISP[\"vector-ref\"](scope, 1));});\nLISP[\"scope-var?\"] = (function(scope, x){return ((LISP.isTrue(LISP[\"null?\"](scope)) ? (LISP.nil) : ((LISP.isTrue(LISP.member(x, LISP[\"scope-param\"](scope))) ? (LISP.t) : (LISP[\"scope-var?\"](LISP[\"scope-outer\"](scope), x))))));});\nLISP[\"local-var?\"] = (function(scope, sym){return ((LISP.isTrue(LISP[\"symbol?\"](sym)) ? (LISP[\"scope-var?\"](scope, LISP[\"get-receiver\"](sym))) : (LISP.nil)));});\nLISP[\"get-receiver\"] = (function(sym){return ((function(s){return ((function(it){return ((LISP.isTrue(it) ? (LISP.intern(LISP.substring(s, 0, it))) : (sym)));})(LISP[\"string-scan\"](s, \".\")));})(LISP[\"symbol->string\"](sym)));});\nLISP[\"register-macro\"](LISP.intern(\"record\"), (function(args, param){var body = LISP._getRestArgs(arguments, 2); return (LISP.list(LISP.intern(\"apply\"), LISP[\"list*\"](LISP.intern(\"lambda\"), param, body), args));}));\nLISP[\"register-macro\"](LISP.intern(\"record-case\"), (function(x){var clauses = LISP._getRestArgs(arguments, 1); return ((function(value){return (LISP.list(LISP.intern(\"let1\"), value, x, LISP[\"list*\"](LISP.intern(\"case\"), LISP.list(LISP.intern(\"car\"), value), LISP.map((function(clause){return ((LISP.isTrue(LISP[\"eq?\"](LISP.car(clause), LISP.t)) ? (clause) : ((function(key){return (LISP.list(LISP.list(key), LISP[\"list*\"](LISP.intern(\"record\"), LISP.list(LISP.intern(\"cdr\"), value), LISP.cdar(clause), LISP.cdr(clause))));})(LISP.caar(clause)))));}), clauses))));})(LISP.gensym()));}));\n(function(traverse$2dargs, confirm$2dvalid$2dparams, traverse$2dquoted$2dvalue){return (traverse$2dargs = (function(args, scope){return (LISP.map((function(x){return (LISP[\"traverse*\"](x, scope));}), args));}), confirm$2dvalid$2dparams = (function(params){return ((LISP.isTrue(params) ? ((LISP.isTrue(LISP[\"symbol?\"](LISP.car(params))) ? (confirm$2dvalid$2dparams(LISP.cdr(params))) : (LISP[\"compile-error\"](\"function parameter must be symbol, but\", LISP.car(params))))) : (LISP.nil)));}), traverse$2dquoted$2dvalue = (function(x){return ((LISP.isTrue(LISP[\"pair?\"](x)) ? (LISP.vector(LISP[\"make-keyword\"](\"FUNCALL\"), LISP.vector(LISP[\"make-keyword\"](\"REF\"), (LISP.isTrue(LISP[\"proper-list?\"](x)) ? (LISP.intern(\"list\")) : (LISP.intern(\"list*\")))), LISP.map(traverse$2dquoted$2dvalue, LISP[\"dotted->proper\"](x)))) : (LISP.vector(LISP[\"make-keyword\"](\"CONST\"), x))));}), LISP[\"traverse-list\"] = (function(s, scope){return ((function(__3){return ((function(__4){return ((LISP.isTrue(LISP[\"eq?\"](__4, LISP.intern(\"quote\"))) ? (LISP.apply((function(x){return ((LISP.isTrue(LISP[\"pair?\"](x)) ? (LISP.vector(LISP[\"make-keyword\"](\"REF\"), LISP[\"scope-add-var\"](scope, traverse$2dquoted$2dvalue(x)))) : (LISP.vector(LISP[\"make-keyword\"](\"CONST\"), x))));}), LISP.cdr(__3))) : ((LISP.isTrue(LISP[\"eq?\"](__4, LISP.intern(\"if\"))) ? (LISP.apply((function(p, thn){var els = LISP._getRestArgs(arguments, 2); return (LISP.vector(LISP[\"make-keyword\"](\"IF\"), LISP[\"traverse*\"](p, scope), LISP[\"traverse*\"](thn, scope), (LISP.isTrue(LISP[\"null?\"](els)) ? (LISP.nil) : (LISP[\"traverse*\"](LISP.car(els), scope)))));}), LISP.cdr(__3))) : ((LISP.isTrue(LISP[\"eq?\"](__4, LISP.intern(\"set!\"))) ? (LISP.apply((function(x, v){return (LISP.vector(LISP[\"make-keyword\"](\"SET!\"), LISP[\"traverse*\"](x, scope), LISP[\"traverse*\"](v, scope)));}), LISP.cdr(__3))) : ((LISP.isTrue(LISP[\"eq?\"](__4, LISP.intern(\"lambda\"))) ? (LISP.apply((function(params){var body = LISP._getRestArgs(arguments, 1); return ((function(){return (confirm$2dvalid$2dparams(params), (function(new$2dscope){return (LISP.vector(LISP[\"make-keyword\"](\"LAMBDA\"), new$2dscope, params, traverse$2dargs(body, new$2dscope)));})(LISP[\"create-scope\"](scope, params)));})());}), LISP.cdr(__3))) : ((LISP.isTrue(LISP[\"eq?\"](__4, LISP.intern(\"def\"))) ? (LISP.apply((function(name, value){return (LISP.vector(LISP[\"make-keyword\"](\"DEF\"), LISP[\"traverse*\"](name, scope), LISP[\"traverse*\"](value, scope)));}), LISP.cdr(__3))) : ((LISP.isTrue(LISP[\"eq?\"](__4, LISP.intern(\"new\"))) ? (LISP.apply((function(klass){var args = LISP._getRestArgs(arguments, 1); return (LISP.vector(LISP[\"make-keyword\"](\"NEW\"), klass, traverse$2dargs(args, LISP[\"new-scope\"])));}), LISP.cdr(__3))) : (LISP.vector(LISP[\"make-keyword\"](\"FUNCALL\"), LISP[\"traverse*\"](LISP.car(s), scope), traverse$2dargs(LISP.cdr(s), scope)))))))))))))));})(LISP.car(__3)));})(s));}));})(LISP.nil, LISP.nil, LISP.nil);\nLISP[\"traverse*\"] = (function(s, scope){return ((LISP.isTrue(LISP[\"pair?\"](s)) ? ((LISP.isTrue(LISP[\"local-var?\"](scope, LISP.car(s))) ? (LISP[\"traverse-list\"](s, scope)) : ((function(expanded){return ((LISP.isTrue(LISP[\"pair?\"](expanded)) ? (LISP[\"traverse-list\"](expanded, scope)) : (LISP[\"traverse*\"](expanded, scope))));})(LISP.macroexpand(s))))) : ((LISP.isTrue(LISP[\"symbol?\"](s)) ? (LISP.vector(LISP[\"make-keyword\"](\"REF\"), s)) : (LISP.vector(LISP[\"make-keyword\"](\"CONST\"), s))))));});\nLISP[\"expand-args\"] = (function(args, scope){return (LISP[\"string-join\"](LISP.map((function(x){return (LISP[\"compile*\"](x, scope));}), args), \", \"));});\nLISP[\"expand-body\"] = (function(body, scope){return ((LISP.isTrue(LISP[\"null?\"](body)) ? (\"LISP.nil\") : (LISP[\"expand-args\"](body, scope))));});\n(function(table){return (LISP[\"hash-table-put!\"](table, \"\\\\\", \"\\\\\\\\\"), LISP[\"hash-table-put!\"](table, \"\\t\", \"\\\\t\"), LISP[\"hash-table-put!\"](table, \"\\n\", \"\\\\n\"), LISP[\"hash-table-put!\"](table, \"\\\"\", \"\\\\\\\"\"), LISP[\"escape-char\"] = (function(c){return ((function(__5){return ((LISP.isTrue(__5) ? (__5) : (c)));})(LISP[\"hash-table-get\"](table, c)));}));})(LISP[\"make-hash-table\"]());\nLISP[\"escape-string\"] = (function(s){return (LISP[\"regexp-replace-all\"](/[\\\\\\t\\n\"]/, s, (function(m){return (LISP[\"escape-char\"](m()));})));});\nLISP[\"escape-sym-char\"] = (function(c){return (LISP[\"string-append\"](\"$\", LISP[\"integer->hex-string\"](LISP[\"char->integer\"](c), \"00\")));});\nLISP[\"integer->hex-string\"] = (function(x, padding){return ((function(s){return ((function(sl){return ((function(pl){return (LISP.substring(s, (sl - pl), sl));})(LISP[\"string-length\"](padding)));})(LISP[\"string-length\"](s)));})(LISP[\"string-append\"](padding, LISP[\"number->string\"](x, 16))));});\nLISP[\"escape-symbol\"] = (function(sym){return (LISP[\"regexp-replace-all\"](/[^0-9A-Za-z_.]/, LISP[\"symbol->string\"](sym), (function(m){return (LISP[\"escape-sym-char\"](LISP[\"string-ref\"](m(), 0)));})));});\nLISP[\"compile-symbol\"] = (function(sym, scope){return ((LISP.isTrue(LISP[\"local-var?\"](scope, sym)) ? (LISP[\"escape-symbol\"](sym)) : ((function(s){return ((LISP.isTrue(LISP.rxmatch(/^[0-9A-Za-z_.]*$/, s)) ? (LISP[\"string-append\"](\"LISP.\", s)) : (LISP[\"string-append\"](\"LISP[\\\"\", LISP[\"escape-string\"](s), \"\\\"]\"))));})(LISP[\"symbol->string\"](sym)))));});\nLISP[\"compile-keyword\"] = (function(keyword){return (LISP[\"string-append\"](\"LISP[\\\"make-keyword\\\"](\\\"\", LISP[\"escape-string\"](LISP[\"keyword->string\"](keyword)), \"\\\")\"));});\nLISP[\"compile-vector\"] = (function(vect, scope){return (LISP[\"string-append\"](\"[\", LISP[\"string-join\"](LISP.map((function(x){return (LISP[\"compile-quote\"](x, scope));}), LISP[\"vector->list\"](vect)), \", \"), \"]\"));});\nLISP[\"compile-regexp\"] = (function(regex){return (LISP[\"string-append\"](\"/\", LISP[\"regexp->string\"](regex), \"/\"));});\nLISP[\"compile-literal\"] = (function(s, scope){return ((LISP.isTrue(LISP[\"number?\"](s)) ? (LISP[\"number->string\"](s)) : ((LISP.isTrue(LISP[\"symbol?\"](s)) ? (LISP[\"compile-symbol\"](s, scope)) : ((LISP.isTrue(LISP[\"keyword?\"](s)) ? (LISP[\"compile-keyword\"](s)) : ((LISP.isTrue(LISP[\"string?\"](s)) ? (LISP[\"x->string\"](s, LISP.t)) : ((LISP.isTrue(LISP[\"vector?\"](s)) ? (LISP[\"compile-vector\"](s, scope)) : ((LISP.isTrue(LISP[\"regexp?\"](s)) ? (LISP[\"compile-regexp\"](s)) : ((LISP.isTrue(LISP[\"null?\"](s)) ? (\"LISP.nil\") : ((LISP.isTrue(LISP[\"eq?\"](s, LISP.t)) ? (\"LISP.t\") : (LISP.error(LISP[\"string-append\"](\"compile-literal: [\", s, \"]\")))))))))))))))))));});\nLISP[\"unary-op?\"] = (function() { var __6 = LISP.list(LISP.intern(\"+\"), LISP.intern(\"-\"), LISP.intern(\"!\"), LISP.intern(\"~\")); return (function(sym){return (LISP.member(sym, __6));}); })();\nLISP[\"compile-unary-op\"] = (function(fn, arg, scope){return (LISP[\"string-append\"](\"(\", LISP[\"symbol->string\"](fn), LISP[\"compile*\"](arg, scope), \")\"));});\nLISP[\"binop?\"] = (function() { var __7 = LISP.list(LISP.intern(\"+\"), LISP.intern(\"-\"), LISP.intern(\"*\"), LISP.intern(\"/\"), LISP.intern(\"%\")); return (function(sym){return (LISP.member(sym, __7));}); })();\nLISP[\"compile-binop\"] = (function(fn, args, scope){return (LISP[\"string-append\"](\"(\", LISP[\"string-join\"](LISP.map((function(x){return (LISP[\"compile*\"](x, scope));}), args), LISP[\"string-append\"](\" \", LISP[\"symbol->string\"](fn), \" \")), \")\"));});\nLISP[\"do-compile-funcall\"] = (function(fn, args, scope){return (LISP[\"string-append\"](LISP[\"compile*\"](fn, scope), \"(\", LISP[\"expand-args\"](args, scope), \")\"));});\nLISP[\"compile-funcall\"] = (function(fn, args, scope){return ((LISP.isTrue((LISP.isTrue(LISP[\"eq?\"](LISP[\"vector-ref\"](fn, 0), LISP[\"make-keyword\"](\"REF\"))) ? ((LISP.isTrue(LISP.not(LISP[\"local-var?\"](scope, LISP[\"vector-ref\"](fn, 1)))) ? (LISP.not(LISP[\"null?\"](args))) : (LISP.nil))) : (LISP.nil))) ? ((function(fnsym){return ((LISP.isTrue((LISP.isTrue(LISP[\"binop?\"](fnsym)) ? (LISP.not(LISP[\"null?\"](LISP.cdr(args)))) : (LISP.nil))) ? (LISP[\"compile-binop\"](fnsym, args, scope)) : ((LISP.isTrue((LISP.isTrue(LISP[\"unary-op?\"](fnsym)) ? (LISP[\"null?\"](LISP.cdr(args))) : (LISP.nil))) ? (LISP[\"compile-unary-op\"](fnsym, LISP.car(args), scope)) : (LISP[\"do-compile-funcall\"](fn, args, scope))))));})(LISP[\"vector-ref\"](fn, 1))) : (LISP[\"do-compile-funcall\"](fn, args, scope))));});\nLISP[\"compile-quote\"] = (function(x, scope){return ((LISP.isTrue(LISP[\"pair?\"](x)) ? (LISP[\"compile*\"](LISP.list(LISP.intern(\"cons\"), LISP.list(LISP.intern(\"quote\"), LISP.car(x)), LISP.list(LISP.intern(\"quote\"), LISP.cdr(x))), scope)) : ((LISP.isTrue(LISP[\"symbol?\"](x)) ? (LISP[\"string-append\"](\"LISP.intern(\\\"\", LISP[\"escape-string\"](LISP[\"symbol->string\"](x)), \"\\\")\")) : ((LISP.isTrue(LISP[\"keyword?\"](x)) ? (LISP[\"compile-keyword\"](x)) : (LISP[\"compile-literal\"](x, scope))))))));});\nLISP[\"compile-if\"] = (function(pred$2dnode, then$2dnode, else$2dnode, scope){return (LISP[\"string-append\"](\"(LISP.isTrue(\", LISP[\"compile*\"](pred$2dnode, scope), \") ? (\", LISP[\"compile*\"](then$2dnode, scope), \") : (\", (LISP.isTrue(else$2dnode) ? (LISP[\"compile*\"](else$2dnode, scope)) : (\"LISP.nil\")), \"))\"));});\nLISP[\"compile-set!\"] = (function(sym, val, scope){return (LISP[\"string-append\"](LISP[\"compile*\"](sym, scope), \" = \", LISP[\"compile*\"](val, scope)));});\nLISP[\"compile-lambda\"] = (function(params, bodies, base$2dscope, extended$2dscope){return ((LISP.isTrue((function(__8){return ((LISP.isTrue(__8) ? (__8) : (LISP[\"pair?\"](params))));})(LISP[\"null?\"](params))) ? (LISP.nil) : (LISP.error(\"function parameters must be a list\"))), (function(rest$2dpos){return ((function(proper$2dparams, rest){return (LISP[\"string-append\"](\"(function(\", LISP[\"string-join\"](LISP.map((function(x){return (LISP[\"escape-symbol\"](x));}), proper$2dparams), \", \"), \"){\", (LISP.isTrue(LISP[\"null?\"](rest)) ? (\"\") : (LISP[\"string-append\"](\"var \", LISP[\"escape-symbol\"](rest), \" = LISP._getRestArgs(arguments, \", LISP[\"number->string\"](LISP.length(proper$2dparams)), \"); \"))), \"return (\", LISP[\"expand-body\"](bodies, extended$2dscope), \");})\"));})((LISP.isTrue(rest$2dpos) ? (LISP.take(rest$2dpos, params)) : (params)), (LISP.isTrue(rest$2dpos) ? (LISP.elt((rest$2dpos + 1), params)) : (LISP.nil))));})(LISP[\"position-if\"]((function() { var __9 = LISP.list(LISP.intern(\"&rest\"), LISP.intern(\"&body\")); return (function(sym){return (LISP.member(sym, __9));}); })(), params)));});\nLISP[\"compile-def\"] = (function(name, value, scope){return (LISP[\"string-append\"](LISP[\"compile*\"](name, scope), \" = \", LISP[\"compile*\"](value, scope)));});\nLISP[\"compile-new\"] = (function(class$2dname, args, scope){return (LISP[\"string-append\"](\"new \", LISP[\"symbol->string\"](class$2dname), \"(\", LISP[\"expand-args\"](args, scope), \")\"));});\nLISP[\"compile-new-scope\"] = (function(scope, compiled$2dbody){return ((function(it){return ((LISP.isTrue(it) ? (LISP[\"string-append\"](\"(function() { var \", LISP[\"string-join\"](LISP.map((function(x){return (LISP[\"string-append\"](LISP[\"escape-symbol\"](LISP.car(x)), \" = \", LISP[\"compile*\"](LISP.cdr(x), scope)));}), LISP.reverse(it)), \", \"), \"; return \", compiled$2dbody, \"; })()\")) : (compiled$2dbody)));})(LISP[\"scope-get-var\"](scope)));});\nLISP[\"compile*\"] = (function(s, scope){return ((function(__10){return ((LISP.isTrue(LISP[\"eq?\"](__10, LISP[\"make-keyword\"](\"CONST\"))) ? (LISP[\"compile-quote\"](LISP[\"vector-ref\"](s, 1), scope)) : ((LISP.isTrue(LISP[\"eq?\"](__10, LISP[\"make-keyword\"](\"REF\"))) ? (LISP[\"compile-symbol\"](LISP[\"vector-ref\"](s, 1), scope)) : ((LISP.isTrue(LISP[\"eq?\"](__10, LISP[\"make-keyword\"](\"IF\"))) ? ((function(p, thn, els){return (LISP[\"compile-if\"](p, thn, els, scope));})(LISP[\"vector-ref\"](s, 1), LISP[\"vector-ref\"](s, 2), LISP[\"vector-ref\"](s, 3))) : ((LISP.isTrue(LISP[\"eq?\"](__10, LISP[\"make-keyword\"](\"FUNCALL\"))) ? (LISP[\"compile-funcall\"](LISP[\"vector-ref\"](s, 1), LISP[\"vector-ref\"](s, 2), scope)) : ((LISP.isTrue(LISP[\"eq?\"](__10, LISP[\"make-keyword\"](\"SET!\"))) ? (LISP[\"compile-set!\"](LISP[\"vector-ref\"](s, 1), LISP[\"vector-ref\"](s, 2), scope)) : ((LISP.isTrue(LISP[\"eq?\"](__10, LISP[\"make-keyword\"](\"LAMBDA\"))) ? ((function(extended$2dscope, params, body){return (LISP[\"compile-new-scope\"](extended$2dscope, LISP[\"compile-lambda\"](params, body, scope, extended$2dscope)));})(LISP[\"vector-ref\"](s, 1), LISP[\"vector-ref\"](s, 2), LISP[\"vector-ref\"](s, 3))) : ((LISP.isTrue(LISP[\"eq?\"](__10, LISP[\"make-keyword\"](\"DEF\"))) ? (LISP[\"compile-def\"](LISP[\"vector-ref\"](s, 1), LISP[\"vector-ref\"](s, 2), scope)) : ((LISP.isTrue(LISP[\"eq?\"](__10, LISP[\"make-keyword\"](\"NEW\"))) ? (LISP[\"compile-new\"](LISP[\"vector-ref\"](s, 1), LISP[\"vector-ref\"](s, 2), scope)) : (LISP[\"compile-error\"](\"Unknown AST node:\", s))))))))))))))))));})(LISP[\"vector-ref\"](s, 0)));});\nLISP[\"compile-error\"] = (function(){var args = LISP._getRestArgs(arguments, 0); return (LISP.error(args));});\nLISP.compile = (function(s){return ((function(top$2dscope){return ((function(tree){return (LISP[\"compile-new-scope\"](top$2dscope, LISP[\"compile*\"](tree, top$2dscope)));})(LISP[\"traverse*\"](s, top$2dscope)));})(LISP[\"create-scope\"](LISP.nil, LISP.nil)));});\n\n  return LISP;\n}, function(LISP) {\n  // Using eval JS function prevent uglify to mangle local variable names,\n  // so put such code here.\n  LISP.eval = function(exp) {\n    return eval(LISP.compile(exp));\n  };\n});\n","\"use strict\";function _typeof(r){return r&&\"undefined\"!=typeof Symbol&&r.constructor===Symbol?\"symbol\":typeof r}!function(r,n){var e=\"undefined\"!=typeof window?window:\"undefined\"!=typeof GLOBAL?GLOBAL:{},t=r(e);n(t),\"undefined\"!=typeof module?module.exports=t:e.LISP=t}(function(r){var n={},e=function(r){for(var e=n.nil,t=r.length;--t>=0;)e=n.cons(r[t],e);return e},t=function(r){return r?n.t:n.nil},i=function(r,n){var e=r.length-n;if(0>=e)return[];for(var t=new Array(e),i=0;e>i;++i)t[i]=r[i+n];return t},u=function b(r,e){return r===n.nil?\"nil\":r===n.t?\"t\":\"string\"==typeof r?e?f(r):r:r instanceof Array?\"#(\"+r.map(function(r){return b(r,e)}).join(\" \")+\")\":null==r?\"\"+r:r.toString(e)};n.nil=!1,n.t=!0,n.isTrue=function(r){return r!==n.nil&&null!=r},n._getRestArgs=function(r,n){return e(Array.prototype.slice.call(r,n))},n._output=\"undefined\"!=typeof process?function(r){process.stdout.write(r)}:function(r){console.log(r)};var c={};n[\"register-macro\"]=function(r,n){return c[r]=n,r},n[\"macroexpand-1\"]=function(r){if(!(n[\"pair?\"](r)&&r.car in c))return r;var e=c[r.car];return n.apply(e,r.cdr)},n.error=function(){throw i(arguments,0).join(\", \")};var s=function(r){this.name=r};s.prototype={toString:function(){return this.name}},n[\"symbol->string\"]=function(r){return r.name},n.intern=function(){var r={};return function(n){return n in r?r[n]:r[n]=new s(n)}}(),n.gensym=function(){var r=0;return function(){return n.intern(\"__\"+ ++r)}}(),n[\"symbol?\"]=function(r){return t(r instanceof s)};var o=function(r){this.name=r};o.prototype={toString:function(r){return r?\":\"+this.name:this.name}},n[\"make-keyword\"]=function(){var r={};return function(n){return n in r?r[n]:r[n]=new o(n)}}(),n[\"keyword?\"]=function(r){return t(r instanceof o)},n[\"keyword->string\"]=function(r){return r.name},n.type=function(r){var e;if(r===n.nil||r===n.t)e=\"bool\";else{var e=\"undefined\"==typeof r?\"undefined\":_typeof(r);\"object\"===e&&(r instanceof s?e=\"symbol\":r instanceof o?e=\"keyword\":r instanceof a?e=\"pair\":r instanceof Array?e=\"vector\":r instanceof n.HashTable&&(e=\"table\"))}return n.intern(e)},n[\"eq?\"]=function(r,n){return t(r===n)};var a=function(r,n,e,t){this.car=r,this.cdr=n,null!=e&&(this.lineNo=e,this.path=t)};a.prototype={toString:function(){var r={quote:\"'\",quasiquote:\"`\",unquote:\",\",\"unquote-splicing\":\",@\"};return function(e){if(this.car instanceof s&&this.cdr instanceof a&&this.cdr.cdr&&this.car.name in r)return r[this.car.name]+u(this.cdr.car,e);var t,i=[],c=\"(\";for(t=this;t instanceof a;t=t.cdr)i.push(c),i.push(u(t.car,e)),c=\" \";return t!==n.nil&&(i.push(\" . \"),i.push(u(t,e))),i.push(\")\"),i.join(\"\")}}(),toArray:function(){for(var r=[],n=this;n instanceof a;n=n.cdr)r.push(n.car);return r}},n.cons=function(r,n){return new a(r,n)},n.car=function(r){return r instanceof a?r.car:r},n.cdr=function(r){return r instanceof a?r.cdr:n.nil},n[\"set-car!\"]=function(r,n){return r.car=n},n[\"set-cdr!\"]=function(r,n){return r.cdr=n},n[\"pair?\"]=function(r){return t(r instanceof a)},n.list=function(){for(var r=n.nil,e=arguments.length;--e>=0;)r=n.cons(arguments[e],r);return r},n[\"reverse!\"]=function(r){for(var e=n.nil,t=r;n[\"pair?\"](t);){var i=t.cdr;t.cdr=e,e=t,t=i}return e},n[\"number?\"]=function(r){return t(\"number\"==typeof r)},n[\"number->string\"]=function(r,n){return r.toString(n)},n[\"+\"]=function(){if(0==arguments.length)return 0;for(var r=arguments[0],n=1;n<arguments.length;++n)r+=arguments[n];return r},n[\"*\"]=function(){if(0==arguments.length)return 1;for(var r=arguments[0],n=1;n<arguments.length;++n)r*=arguments[n];return r},n[\"-\"]=function(){if(0==arguments.length)return 0;var r=arguments[0];if(1==arguments.length)return-r;for(var n=1;n<arguments.length;++n)r-=arguments[n];return r},n[\"/\"]=function(){if(0==arguments.length)return 1;var r=arguments[0];if(1==arguments.length)return 1/r;for(var n=1;n<arguments.length;++n)r/=arguments[n];return r},n[\"%\"]=function(){if(0==arguments.length)return 0;var r=arguments[0];if(1==arguments.length)return r;for(var n=1;n<arguments.length;++n)r%=arguments[n];return r},n[\"<\"]=function(){if(arguments.length>0)for(var r=arguments[0],e=1;e<arguments.length;++e){var t=arguments[e];if(!(t>r))return n.nil;r=t}return n.t},n[\">\"]=function(){if(arguments.length>0)for(var r=arguments[0],e=1;e<arguments.length;++e){var t=arguments[e];if(!(r>t))return n.nil;r=t}return n.t},n[\"<=\"]=function(){if(arguments.length>0)for(var r=arguments[0],e=1;e<arguments.length;++e){var t=arguments[e];if(!(t>=r))return n.nil;r=t}return n.t},n[\">=\"]=function(){if(arguments.length>0)for(var r=arguments[0],e=1;e<arguments.length;++e){var t=arguments[e];if(!(r>=t))return n.nil;r=t}return n.t},n[\"string?\"]=function(r){return t(\"string\"==typeof r)},n[\"string=?\"]=function(r,n){return t(r===n)},n[\"string-append\"]=function(){return i(arguments,0).join(\"\")},n[\"string-join\"]=function(r,e){return r===n.nil?\"\":r.toArray().join(e)},n[\"string-length\"]=function(r){return r.length},n[\"string-ref\"]=function(r,n){return r[n]},n.substring=function(r,n,e){return r.slice(n,e)},n[\"string-scan\"]=function(r,e){var t=r.indexOf(e);return t>=0?t:n.nil},n[\"char->integer\"]=function(r,n){return r.charCodeAt(n)};var l={\"\\\\\":\"\\\\\\\\\",\"\t\":\"\\\\t\",\"\\n\":\"\\\\n\",'\"':'\\\\\"'},f=function(r){var n=function(r){return r in l?l[r]:\"\\\\x\"+(\"0\"+r.charCodeAt(0).toString(16)).slice(-2)};return'\"'+r.replace(/[\\x00-\\x1f\"\\\\]/g,n)+'\"'};n[\"x->string\"]=u,n.print=function(r){return n._output(u(r)),r},n.puts=function(r){return n._output(u(r)),\"undefined\"!=typeof process&&n._output(\"\\n\"),r},n.write=function(r){return n._output(u(r,10)),r},n.apply=function(r){var e=[];if(arguments.length>1){for(var t=1;t<arguments.length-1;++t)e.push(arguments[t]);var i=arguments[arguments.length-1];i!==n.nil&&(e=e.concat(i.toArray()))}return r.apply(null,e)},n.JS=r,n.HashTable=function(){},n.HashTable.prototype={toString:function(){var r=\"\";for(var n in this)this.hasOwnProperty(n)&&(r.length>0&&(r+=\", \"),r+=n+\":\"+this[n]);return\"#table<\"+r+\">\"}},n[\"make-hash-table\"]=function(){return new n.HashTable},n[\"hash-table?\"]=function(r){return r instanceof n.HashTable},n[\"hash-table-exists?\"]=function(r,e){return e in r?n.t:n.nil},n[\"hash-table-get\"]=function(r,e){return e in r?r[e]:arguments.length>=3?arguments[2]:n.nil},n[\"hash-table-put!\"]=function(r,n,e){return r[n]=e},n.vector=function(){return i(arguments,0)},n[\"make-vector\"]=function(r,e){void 0===e&&(e=n.nil);for(var t=new Array(r),i=0;r>i;++i)t[i]=e;return t},n[\"vector?\"]=function(r){return t(r instanceof Array)},n[\"vector-length\"]=function(r){return r.length},n[\"vector-ref\"]=function(r,n){return r[n]},n[\"vector-set!\"]=function(r,n,e){return r[n]=e},n[\"regexp?\"]=function(r){return t(r instanceof RegExp)},n.rxmatch=function(r,n){return t(r.exec(n))},n[\"regexp-replace-all\"]=function(r,n,e){if(!r.global){var t=r.toString(),i=t.lastIndexOf(\"/\");r=new RegExp(t.slice(1,i),t.slice(i+1)+\"g\")}return n.replace(r,function(r){return e(function(){return r})})},n[\"regexp->string\"]=function(r){var n=r.toString();return n.slice(1,n.length-1)};var p=function(){this.str=\"\",this.lineNo=0};p.prototype={close:function(){},peek:function(){var r=this.fetch();return null==r?r:this.str[0]},getc:function(){var r=this.peek();return null==r?r:(this.str=this.str.slice(1),r)},match:function(r,n){var e=this.fetch();if(null==e)return e;var t=this.str.match(r);return t&&!n&&(this.str=RegExp.rightContext),t},eof:function(){return null==this.str},getLine:function(){var r=this.str||this.readLine();return this.str=\"\",r},fetch:function(){if(null==this.str)return null;if(\"\"===this.str){if(null==(this.str=this.readLine()))return;++this.lineNo}return this.str}};var d=function(r){p.call(this),this.str=r,this.lineNo=1};d.prototype=Object.create(p.prototype),d.prototype.readLine=function(){return null},n.StrStream=d,n.NoCloseParenException=function(){};var m=\"\\\\s(){}\\\\[\\\\]'`,;#\\\"\",g=RegExp(\"^\\\\.(?=[\"+m+\"])\"),v=RegExp(\"^([^\"+m+\"]+)\"),h={t:\"\t\",n:\"\\n\"},T={},y={read:function(r){do if(r.eof())return null;while(r.match(/^\\s+/));var n=r.peek();if(n in T)return T[n](r,r.getc());var e;if(r.match(/^\\(/))return y.readList(r);if(r.match(/^;[^\\n]*\\n?/))return y.read(r);if(e=r.match(/^\"((\\\\.|[^\"\\\\])*)\"/))return y.unescape(e[1]);if(r.match(/^#\\(/))return y.readVector(r);if(e=r.match(/^#\\/([^\\/]*)\\//))return new RegExp(e[1]);if(r.match(/^#\\|(.|[\\n\\r])*?\\|#/))return y.read(r);if(!r.match(g,!0))return(e=r.match(v))?y.readSymbolOrNumber(e[1]):void 0},readSymbolOrNumber:function(r){return\"nil\"===r?n.nil:\"t\"===r?n.t:\":\"===r[0]?n[\"make-keyword\"](r.slice(1)):r.match(/^([+\\-]?[0-9]+(\\.[0-9]*)?)$/)?parseFloat(r):n.intern(r)},readList:function(r){for(var e=n.nil;;){var t=y.read(r);{if(null==t){if(r.match(/^\\s*\\)/))return n[\"reverse!\"](e);if(r.match(g)){var i=y.read(r);if(null!=i&&r.match(/^\\s*\\)/)){var u=n[\"reverse!\"](e);return e.cdr=i,u}}throw new n.NoCloseParenException}e=new a(t,e,r.lineNo,r.path)}}},readVector:function(r){for(var e=[];;){var t=y.read(r);{if(void 0===t){if(r.match(/^\\s*\\)/))return e;throw new n.NoCloseParenException}e.push(t)}}},unescape:function(r){return r.replace(/\\\\(x([0-9a-fA-F]{2})|(.))/g,function(r,n,e,t){return e?String.fromCharCode(parseInt(e,16)):t in h?h[t]:t})}};if(n[\"set-macro-character\"]=function(r,n){T[r]=n},n[\"set-macro-character\"](\"'\",function(r,e){return n.list(n.intern(\"quote\"),y.read(r))}),n[\"set-macro-character\"](\"`\",function(r,e){return n.list(n.intern(\"quasiquote\"),y.read(r))}),n[\"set-macro-character\"](\",\",function(r,e){var e=r.peek(),t=\"unquote\";return\"@\"==e&&(t=\"unquote-splicing\",r.getc()),n.list(n.intern(t),y.read(r))}),n.read=function(r){return y.read(r||n[\"*stdin*\"])},n[\"read-from-string\"]=function(r){return y.read(new d(r))},n[\"read-line\"]=function(r){return(r||n[\"*stdin*\"]).getLine()},\"undefined\"!=typeof process){var q=require(\"fs\");n.FileStream=function(){var r=4096,e=new Buffer(r),t=function(r,n){p.call(this),this.fd=r,this.path=n,this.lines=[],this.index=0};return t.prototype=Object.create(p.prototype),t.prototype.close=function(){null!=this.fd&&(q.closeSync(this.fd),this.fd=null,this.lines.length=this.index=0,this.str=null,this.chomped=!1)},t.prototype.readLine=function(){for(;;){var t=\"\";if(this.index<this.lines.length){if(this.index<this.lines.length-1||!this.chomped)return this.lines[this.index++];this.chomped&&(t=this.lines[this.index])}if(null==this.fd)return n.nil;var i=q.readSync(this.fd,e,0,r);if(0>=i)return null;var u=t+e.slice(0,i).toString();this.chomped=!1,u.length>0&&(\"\\n\"!=u[u.length-1]?this.chomped=!0:u=u.slice(0,u.length-1)),this.lines=u.split(\"\\n\"),this.index=0}},t}(),n[\"*stdin*\"]=new n.FileStream(process.stdin.fd,\"*stdin*\"),n[\"*stdout*\"]=new n.FileStream(process.stdout.fd,\"*stdout*\"),n[\"*stderr*\"]=new n.FileStream(process.stderr.fd,\"*stderr*\"),n.open=function(r,e){try{var t=q.openSync(r,e||\"r\");return new n.FileStream(t,r)}catch(i){return n.nil}},n.close=function(r){return r.close(),r},n.load=function(r){var e=n.open(r);if(!e)return n.error(\"Cannot open [\"+r+\"]\");e.match(/^#!/,!0)&&e.getLine();for(var t;;){var i=n.read(e);if(null==i)break;t=n.eval(i)}return n.close(e),t},n.exit=function(r){process.exit(r)},n.jsrequire=require}return n[\"register-macro\"](n.intern(\"defmacro\"),function(r,e){var t=n._getRestArgs(arguments,2);return n.list(n.intern(\"register-macro\"),n.list(n.intern(\"quote\"),r),n[\"list*\"](n.intern(\"lambda\"),e,t))}),n[\"register-macro\"](n.intern(\"defun\"),function(r,e){var t=n._getRestArgs(arguments,2);return n.list(n.intern(\"def\"),r,n[\"list*\"](n.intern(\"lambda\"),e,t))}),n[\"register-macro\"](n.intern(\"let\"),function(r){var e=n._getRestArgs(arguments,1);return n.isTrue(n[\"symbol?\"](r))?function(){var r=n.list(n.nil);return function(e,t,i){return n[\"list*\"](n.list(n.intern(\"lambda\"),n.list(e),n.list(n.intern(\"set!\"),e,n[\"list*\"](n.intern(\"lambda\"),n.map(n.car,t),i)),n[\"list*\"](e,n.map(n.cadr,t))),r)}}()(r,n.car(e),n.cdr(e)):n[\"list*\"](n[\"list*\"](n.intern(\"lambda\"),n.map(n.car,r),e),n.map(n.cadr,r))}),n[\"register-macro\"](n.intern(\"let1\"),function(r,e){var t=n._getRestArgs(arguments,2);return n[\"list*\"](n.intern(\"let\"),n.list(n.list(r,e)),t)}),n[\"register-macro\"](n.intern(\"let*\"),function(r){var e=n._getRestArgs(arguments,1);return n.isTrue(n[\"null?\"](r))?n[\"list*\"](n.intern(\"do\"),e):n.list(n.intern(\"let1\"),n.caar(r),n.cadar(r),n[\"list*\"](n.intern(\"let*\"),n.cdr(r),e))}),n[\"register-macro\"](n.intern(\"when\"),function(r){var e=n._getRestArgs(arguments,1);return n.list(n.intern(\"if\"),r,n[\"list*\"](n.intern(\"do\"),e))}),n[\"register-macro\"](n.intern(\"unless\"),function(r){var e=n._getRestArgs(arguments,1);return n.list(n.intern(\"if\"),r,n.nil,n[\"list*\"](n.intern(\"do\"),e))}),n[\"register-macro\"](n.intern(\"cond\"),function(){var r=n._getRestArgs(arguments,0);return n.isTrue(n[\"null?\"](r))?n.nil:function(r,e){return n.isTrue(n[\"eq?\"](n.car(r),n.t))?n[\"list*\"](n.intern(\"do\"),n.cdr(r)):n.isTrue(n[\"null?\"](n.cdr(r)))?function(t){return n.list(n.intern(\"let\"),n.list(n.list(t,n.car(r))),n.list(n.intern(\"if\"),t,t,n[\"list*\"](n.intern(\"cond\"),e)))}(n.gensym()):n.isTrue(n[\"eq?\"](n.cadr(r),n.intern(\"=>\")))?function(t){return n.list(n.intern(\"let\"),n.list(n.list(t,n.car(r))),n.list(n.intern(\"if\"),t,n.list(n.caddr(r),t),n[\"list*\"](n.intern(\"cond\"),e)))}(n.gensym()):n.list(n.intern(\"if\"),n.car(r),n[\"list*\"](n.intern(\"do\"),n.cdr(r)),n[\"list*\"](n.intern(\"cond\"),e))}(n.car(r),n.cdr(r))}),n[\"register-macro\"](n.intern(\"case\"),function(r){var e=n._getRestArgs(arguments,1);return function(t){return n.list(n.intern(\"let1\"),t,r,n[\"list*\"](n.intern(\"cond\"),n.map(function(r){return n.isTrue(n[\"eq?\"](n.car(r),n.t))?r:n.isTrue(n[\"null?\"](n.cdar(r)))?n[\"list*\"](n.list(n.intern(\"eq?\"),t,n.list(n.intern(\"quote\"),n.caar(r))),n.cdr(r)):n[\"list*\"](n.list(n.intern(\"member\"),t,n.list(n.intern(\"quote\"),n.car(r))),n.cdr(r))},e)))}(n.gensym())}),n[\"register-macro\"](n.intern(\"and\"),function(){var r=n.list(n.nil);return function(){var e=n._getRestArgs(arguments,0);return n.isTrue(n[\"null?\"](e))?n.t:n.isTrue(n[\"null?\"](n.cdr(e)))?n.car(e):n[\"list*\"](n.intern(\"if\"),n.car(e),n[\"list*\"](n.intern(\"and\"),n.cdr(e)),r)}}()),n[\"register-macro\"](n.intern(\"or\"),function(){var r=n._getRestArgs(arguments,0);return n.isTrue(n[\"null?\"](n.cdr(r)))?n.car(r):function(e){return n.list(n.intern(\"let1\"),e,n.car(r),n.list(n.intern(\"if\"),e,e,n[\"list*\"](n.intern(\"or\"),n.cdr(r))))}(n.gensym())}),n[\"register-macro\"](n.intern(\"do\"),function(){var r=n._getRestArgs(arguments,0);return n.isTrue(n[\"null?\"](r))?n.nil:n.isTrue(n[\"null?\"](n.cdr(r)))?n.car(r):n[\"list*\"](n.intern(\"let\"),n.nil,r)}),n[\"register-macro\"](n.intern(\"aif\"),function(r,e){var t=n._getRestArgs(arguments,2);return n.list(n.intern(\"let1\"),n.intern(\"it\"),r,n[\"list*\"](n.intern(\"if\"),n.intern(\"it\"),e,t))}),n[\"register-macro\"](n.intern(\"awhen\"),function(r){var e=n._getRestArgs(arguments,1);return n.list(n.intern(\"aif\"),r,n[\"list*\"](n.intern(\"do\"),e))}),n[\"register-macro\"](n.intern(\"awhile\"),function(r){var e=n._getRestArgs(arguments,1);return function(t){return n.list(n.intern(\"let\"),t,n.nil,n.list(n.intern(\"let1\"),n.intern(\"it\"),r,n[\"list*\"](n.intern(\"when\"),n.intern(\"it\"),n.append(e,n.list(n.list(t))))))}(n.gensym())}),n[\"null?\"]=function(r){return n[\"eq?\"](r,n.nil)},n.not=function(r){return n[\"eq?\"](r,n.nil)},n.caar=function(r){return n.car(n.car(r))},n.cadr=function(r){return n.car(n.cdr(r))},n.cdar=function(r){return n.cdr(n.car(r))},n.cddr=function(r){return n.cdr(n.cdr(r))},n.cadar=function(r){return n.cadr(n.car(r))},n.caddr=function(r){return n.car(n.cddr(r))},n.cdddr=function(r){return n.cdr(n.cddr(r))},n[\"equal?\"]=function(r,e){return n.isTrue(n[\"eq?\"](r,e))?n.t:function(t){return n.isTrue(n[\"eq?\"](t,n.type(e)))?function(t){return n.isTrue(n[\"eq?\"](t,n.intern(\"pair\")))?n.isTrue(n[\"equal?\"](n.car(r),n.car(e)))?n[\"equal?\"](n.cdr(r),n.cdr(e)):n.nil:n.isTrue(n[\"eq?\"](t,n.intern(\"vector\")))?function(t){return n.isTrue(n[\"eq?\"](t,n[\"vector-length\"](e)))?function(i){return(i=function(u){return function(t){return n.isTrue(t)?t:n.isTrue(n[\"equal?\"](n[\"vector-ref\"](r,u),n[\"vector-ref\"](e,u)))?i(u+1):n.nil}(n[\">=\"](u,t))})(0)}(n.nil):n.nil}(n[\"vector-length\"](r)):n.nil}(t):n.nil}(n.type(r))},n.length=function(r){return function(e){return(e=function(r,t){return n.isTrue(n[\"pair?\"](r))?e(n.cdr(r),t+1):t})(r,0)}(n.nil)},n[\"last-pair\"]=function(r){return n.isTrue(n[\"pair?\"](n.cdr(r)))?n[\"last-pair\"](n.cdr(r)):r},n.member=function(r,e){return n.isTrue(n[\"null?\"](e))?n.nil:n.isTrue(n[\"eq?\"](r,n.car(e)))?e:n.member(r,n.cdr(e))},n.assoc=function(r,e){return n.isTrue(n[\"null?\"](e))?n.nil:n.isTrue(n[\"eq?\"](r,n.caar(e)))?n.car(e):n.assoc(r,n.cdr(e))},n.acons=function(r,e,t){return n.cons(n.cons(r,e),t)},n.map=function(r,e){return n.isTrue(n[\"null?\"](e))?n.nil:n.cons(r(n.car(e)),n.map(r,n.cdr(e)))},n.append=function(r){var e=n._getRestArgs(arguments,1);return n.isTrue(n[\"null?\"](e))?r:n.isTrue(n[\"null?\"](r))?n.apply(n.append,e):n.cons(n.car(r),n.apply(n.append,n.cdr(r),e))},n.reverse=function(r){return function(e){return(e=function(r,t){return n.isTrue(n[\"pair?\"](r))?e(n.cdr(r),n.cons(n.car(r),t)):t})(r,n.nil)}(n.nil)},n[\"list*\"]=function(){var r=n._getRestArgs(arguments,0);return n.isTrue(n[\"null?\"](r))?n.nil:n.isTrue(n[\"null?\"](n.cdr(r)))?n.car(r):function(e){return(e=function(t,i){return n.isTrue(n[\"null?\"](n.cdr(i)))?function(){return n[\"set-cdr!\"](t,n.car(i)),r}():e(i,n.cdr(i))})(r,n.cdr(r))}(n.nil)},n[\"last-pair\"]=function(r){return n.isTrue(n[\"pair?\"](n.cdr(r)))?n[\"last-pair\"](n.cdr(r)):r},n[\"proper-list?\"]=function(r){return n.isTrue(n[\"pair?\"](r))?n[\"null?\"](n.cdr(n[\"last-pair\"](r))):n.nil},n[\"dotted->proper\"]=function(r){return n.isTrue(n[\"pair?\"](r))?n.isTrue(n[\"proper-list?\"](r))?r:function(r,e){return function(t){return n[\"set-cdr!\"](e,n.list(r)),t}(n[\"reverse!\"](e))}(n.cdr(n[\"last-pair\"](r)),n.reverse(r)):n.list(r)},n[\"vector->list\"]=function(r){return function(e){return(e=function(t,i){return n.isTrue(n[\"<\"](t,0))?i:e(t-1,n.cons(n[\"vector-ref\"](r,t),i))})(n[\"vector-length\"](r)-1,n.nil)}(n.nil)},n[\"position-if\"]=function(r,e){return function(t){return(t=function(e,i){return n.isTrue(e)?n.isTrue(r(n.car(e)))?i:t(n.cdr(e),i+1):n.nil})(e,0)}(n.nil)},n.take=function(r,e){return function(t){return(t=function(r,e,i){return n.isTrue(function(r){return n.isTrue(r)?r:n[\"null?\"](e)}(n[\"<=\"](r,0)))?n[\"reverse!\"](i):t(r-1,n.cdr(e),n.cons(n.car(e),i))})(r,e,n.nil)}(n.nil)},n.drop=function(r,e){return n.isTrue(function(r){return n.isTrue(r)?r:n[\"null?\"](e)}(n[\"<=\"](r,0)))?e:n.drop(r-1,n.cdr(e))},n.elt=function(r,e){return n.car(n.drop(r,e))},n[\"remove-if\"]=function(r,e){return function(t){return(t=function(e,i){return n.isTrue(n[\"null?\"](e))?n[\"reverse!\"](i):t(n.cdr(e),n.isTrue(r(n.car(e)))?i:n.cons(n.car(e),i))})(e,n.nil)}(n.nil)},n[\"register-macro\"](n.intern(\"dotimes\"),function(r){var e=n._getRestArgs(arguments,1);return function(){var t=n.list(0),i=n.list(1);return function(u,c,s){return n.list(n.intern(\"let1\"),c,n.cadr(r),n.list(n.intern(\"let\"),s,n.list(n[\"list*\"](u,t)),n.list(n.intern(\"if\"),n.list(n.intern(\"<\"),u,c),n[\"list*\"](n.intern(\"do\"),n.append(e,n.list(n.list(s,n[\"list*\"](n.intern(\"+\"),u,i))))),n.caddr(r))))}}()(n.car(r),n.gensym(),n.gensym())}),n[\"register-macro\"](n.intern(\"dolist\"),function(r){var e=n._getRestArgs(arguments,1);return function(t,i,u){return n.list(n.intern(\"let\"),i,n.list(n.list(u,n.cadr(r))),n.list(n.intern(\"let1\"),t,n.list(n.intern(\"car\"),u),n[\"list*\"](n.intern(\"when\"),t,n.append(e,n.list(n.list(i,n.list(n.intern(\"cdr\"),u)))))))}(n.car(r),n.gensym(),n.gensym())}),n[\"register-macro\"](n.intern(\"labels\"),function(r){var e=n._getRestArgs(arguments,1);return n[\"list*\"](n.intern(\"let\"),n.map(function(r){return n.car(r)},r),n.append(n.map(function(r){return n.list(n.intern(\"set!\"),n.car(r),n[\"list*\"](n.intern(\"lambda\"),n.cdr(r)))},r),e))}),n.nreconc=function(r,e){return function(t){return n[\"set-cdr!\"](r,e),t}(n[\"reverse!\"](r))},n.any=function(r,e){return n.isTrue(n[\"null?\"](e))?n.nil:n.isTrue(r(n.car(e)))?n.t:n.any(r,n.cdr(e))},n.every=function(r,e){return n.isTrue(n[\"null?\"](e))?n.t:n.isTrue(r(n.car(e)))?n.every(r,n.cdr(e)):n.nil},n[\"*bq-clobberable*\"]=n.gensym(),n[\"*bq-quote-nil*\"]=n.list(n.intern(\"quote\"),n.nil),n[\"register-macro\"](n.intern(\"quasiquote\"),function(r){return n[\"bq-completely-process\"](r)}),n[\"bq-completely-process\"]=function(r){return n[\"bq-simplify\"](n[\"bq-process\"](r))},n[\"bq-process\"]=function(r){return n.isTrue(n.not(n[\"pair?\"](r)))?n.list(n.intern(\"quote\"),r):n.isTrue(n[\"eq?\"](n.car(r),n.intern(\"quasiquote\")))?n[\"bq-process\"](n[\"bq-completely-process\"](n.cadr(r))):n.isTrue(n[\"eq?\"](n.car(r),n.intern(\"unquote\")))?n.cadr(r):n.isTrue(n[\"eq?\"](n.car(r),n.intern(\"unquote-splicing\")))?n.error(\",@~S after `\",n.cadr(r)):n.isTrue(n[\"eq?\"](n.car(r),n.intern(\"unquote-dot\")))?n.error(\",.~S after `\",n.cadr(r)):function(e){return(e=function(r,t){return n.isTrue(n.not(n[\"pair?\"](r)))?n.cons(n.intern(\"append\"),n.nreconc(t,n.list(n.list(n.intern(\"quote\"),r)))):n.isTrue(n[\"eq?\"](n.car(r),n.intern(\"unquote\")))?function(){return n.isTrue(n[\"null?\"](n.cddr(r)))?n.nil:n.error(\"Malformed ,~S\",r),n.cons(n.intern(\"append\"),n.nreconc(t,n.list(n.cadr(r))))}():function(){return n.isTrue(n[\"eq?\"](n.car(r),n.intern(\"unquote-splicing\")))?n.error(\"Dotted ,@~S\",r):n.nil,n.isTrue(n[\"eq?\"](n.car(r),n.intern(\"unquote-dot\")))?n.error(\"Dotted ,.~S\",r):n.nil,e(n.cdr(r),n.cons(n.bracket(n.car(r)),t))}()})(r,n.nil)}(n.nil)},n.bracket=function(r){return n.isTrue(n.not(n[\"pair?\"](r)))?n.list(n.intern(\"list\"),n[\"bq-process\"](r)):n.isTrue(n[\"eq?\"](n.car(r),n.intern(\"unquote\")))?n.list(n.intern(\"list\"),n.cadr(r)):n.isTrue(n[\"eq?\"](n.car(r),n.intern(\"unquote-splicing\")))?n.cadr(r):n.isTrue(n[\"eq?\"](n.car(r),n.intern(\"unquote-dot\")))?n.list(n[\"*bq-clobberable*\"],n.cadr(r)):n.list(n.intern(\"list\"),n[\"bq-process\"](r))},n.maptree=function(r,e){return n.isTrue(n.not(n[\"pair?\"](e)))?r(e):function(r,t){return n.isTrue(n.isTrue(n[\"equal?\"](r,n.car(e)))?n[\"equal?\"](t,n.cdr(e)):n.nil)?e:n.cons(r,t)}(r(n.car(e)),n.maptree(r,n.cdr(e)))},n[\"bq-splicing-frob\"]=function(r){return n.isTrue(n[\"pair?\"](r))?function(e){return n.isTrue(e)?e:n[\"eq?\"](n.car(r),n.intern(\"unquote-dot\"))}(n[\"eq?\"](n.car(r),n.intern(\"unquote-splicing\"))):n.nil},n[\"bq-frob\"]=function(r){return n.isTrue(n[\"pair?\"](r))?function(e){return n.isTrue(e)?e:function(e){return n.isTrue(e)?e:n[\"eq?\"](n.car(r),n.intern(\"unquote-dot\"))}(n[\"eq?\"](n.car(r),n.intern(\"unquote-splicing\")))}(n[\"eq?\"](n.car(r),n.intern(\"unquote\"))):n.nil},n[\"bq-simplify\"]=function(r){return n.isTrue(n[\"pair?\"](r))?function(r){return n.isTrue(n.not(n[\"eq?\"](n.car(r),n.intern(\"append\"))))?r:n[\"bq-simplify-args\"](r)}(n.isTrue(n[\"eq?\"](n.car(r),n.intern(\"quote\")))?r:n.maptree(n[\"bq-simplify\"],r)):r},n[\"bq-simplify-args\"]=function(r){return function(e){return(e=function(r,t){return n.isTrue(n.not(n[\"null?\"](r)))?e(n.cdr(r),n.isTrue(n.not(n[\"pair?\"](n.car(r))))?n[\"bq-attach-append\"](n.intern(\"append\"),n.car(r),t):n.isTrue(n.isTrue(n[\"eq?\"](n.caar(r),n.intern(\"list\")))?n.not(n.any(n[\"bq-splicing-frob\"],n.cdar(r))):n.nil)?n[\"bq-attach-conses\"](n.cdar(r),t):n.isTrue(n.isTrue(n[\"eq?\"](n.caar(r),n.intern(\"list*\")))?n.not(n.any(n[\"bq-splicing-frob\"],n.cdar(r))):n.nil)?n[\"bq-attach-conses\"](n.reverse(n.cdr(n.reverse(n.cdar(r)))),n[\"bq-attach-append\"](n.intern(\"append\"),n.car(n.last(n.car(r))),t)):n.isTrue(n.isTrue(n[\"eq?\"](n.caar(r),n.intern(\"quote\")))&&n.isTrue(n[\"pair?\"](n.cadar(r)))&&n.isTrue(n.not(n[\"bq-frob\"](n.cadar(r))))?n.not(n.cddar(r)):n.nil)?n[\"bq-attach-conses\"](n.list(n.list(n.intern(\"quote\"),n.caadar(r))),t):n.isTrue(n[\"eq?\"](n.caar(r),n[\"*bq-clobberable*\"]))?n[\"bq-attach-append\"](n.intern(\"append!\"),n.cadar(r),t):n[\"bq-attach-append\"](n.intern(\"append\"),n.car(r),t)):t})(n.reverse(n.cdr(r)),n.nil)}(n.nil)},n[\"null-or-quoted\"]=function(r){return function(e){return n.isTrue(e)?e:n.isTrue(n[\"pair?\"](r))?n[\"eq?\"](n.car(r),n.intern(\"quote\")):n.nil}(n[\"null?\"](r))},n[\"bq-attach-append\"]=function(r,e,t){return n.isTrue(n.isTrue(n[\"null-or-quoted\"](e))?n[\"null-or-quoted\"](t):n.nil)?n.list(n.intern(\"quote\"),n.append(n.cadr(e),n.cadr(t))):n.isTrue(function(r){return n.isTrue(r)?r:n[\"equal?\"](t,n[\"*bq-quote-nil*\"])}(n[\"null?\"](t)))?n.isTrue(n[\"bq-splicing-frob\"](e))?n.list(r,e):e:n.isTrue(n.isTrue(n[\"pair?\"](t))?n[\"eq?\"](n.car(t),r):n.nil)?n[\"list*\"](n.car(t),e,n.cdr(t)):n.list(r,e,t)},n[\"bq-attach-conses\"]=function(r,e){return n.isTrue(n.isTrue(n.every(n[\"null-or-quoted\"],r))?n[\"null-or-quoted\"](e):n.nil)?n.list(n.intern(\"quote\"),n.append(n.map(n.cadr,r),n.cadr(e))):n.isTrue(function(r){return n.isTrue(r)?r:n[\"equal?\"](e,n[\"*bq-quote-nil*\"])}(n[\"null?\"](e)))?n.cons(n.intern(\"list\"),r):n.isTrue(n.isTrue(n[\"pair?\"](e))?function(r){return n.isTrue(r)?r:n[\"eq?\"](n.car(e),n.intern(\"list*\"))}(n[\"eq?\"](n.car(e),n.intern(\"list\"))):n.nil)?n.cons(n.car(e),n.append(r,n.cdr(e))):n.cons(n.intern(\"list*\"),n.append(r,n.list(e)))},n.macroexpand=function(r){return function(e){return n.isTrue(n[\"equal?\"](e,r))?r:n.macroexpand(e)}(n[\"macroexpand-1\"](r))},n[\"create-scope\"]=function(r,e){return n.vector(n[\"remove-if\"](function(){var r=n.list(n.intern(\"&rest\"),n.intern(\"&body\"));return function(e){return n.member(e,r)}}(),e),n.nil,r)},n[\"scope-param\"]=function(r){return n[\"vector-ref\"](r,0)},n[\"scope-outer\"]=function(r){return n[\"vector-ref\"](r,2)},n[\"scope-add-var\"]=function(r,e){return function(t){return n[\"vector-set!\"](r,1,n.cons(n.cons(t,e),n[\"vector-ref\"](r,1))),n[\"vector-set!\"](r,0,n.cons(t,n[\"vector-ref\"](r,0))),t}(n.gensym())},n[\"scope-get-var\"]=function(r){return n[\"vector-ref\"](r,1)},n[\"scope-var?\"]=function(r,e){return n.isTrue(n[\"null?\"](r))?n.nil:n.isTrue(n.member(e,n[\"scope-param\"](r)))?n.t:n[\"scope-var?\"](n[\"scope-outer\"](r),e)},n[\"local-var?\"]=function(r,e){return n.isTrue(n[\"symbol?\"](e))?n[\"scope-var?\"](r,n[\"get-receiver\"](e)):n.nil},n[\"get-receiver\"]=function(r){return function(e){return function(t){return n.isTrue(t)?n.intern(n.substring(e,0,t)):r}(n[\"string-scan\"](e,\".\"))}(n[\"symbol->string\"](r))},n[\"register-macro\"](n.intern(\"record\"),function(r,e){var t=n._getRestArgs(arguments,2);return n.list(n.intern(\"apply\"),n[\"list*\"](n.intern(\"lambda\"),e,t),r)}),n[\"register-macro\"](n.intern(\"record-case\"),function(r){var e=n._getRestArgs(arguments,1);return function(t){return n.list(n.intern(\"let1\"),t,r,n[\"list*\"](n.intern(\"case\"),n.list(n.intern(\"car\"),t),n.map(function(r){return n.isTrue(n[\"eq?\"](n.car(r),n.t))?r:function(e){return n.list(n.list(e),n[\"list*\"](n.intern(\"record\"),n.list(n.intern(\"cdr\"),t),n.cdar(r),n.cdr(r)))}(n.caar(r))},e)))}(n.gensym())}),function(r,e,t){return r=function(r,e){return n.map(function(r){return n[\"traverse*\"](r,e)},r)},e=function(r){return n.isTrue(r)?n.isTrue(n[\"symbol?\"](n.car(r)))?e(n.cdr(r)):n[\"compile-error\"](\"function parameter must be symbol, but\",n.car(r)):n.nil},t=function(r){return n.isTrue(n[\"pair?\"](r))?n.vector(n[\"make-keyword\"](\"FUNCALL\"),n.vector(n[\"make-keyword\"](\"REF\"),n.isTrue(n[\"proper-list?\"](r))?n.intern(\"list\"):n.intern(\"list*\")),n.map(t,n[\"dotted->proper\"](r))):n.vector(n[\"make-keyword\"](\"CONST\"),r)},n[\"traverse-list\"]=function(i,u){return function(c){return function(s){return n.isTrue(n[\"eq?\"](s,n.intern(\"quote\")))?n.apply(function(r){return n.isTrue(n[\"pair?\"](r))?n.vector(n[\"make-keyword\"](\"REF\"),n[\"scope-add-var\"](u,t(r))):n.vector(n[\"make-keyword\"](\"CONST\"),r)},n.cdr(c)):n.isTrue(n[\"eq?\"](s,n.intern(\"if\")))?n.apply(function(r,e){var t=n._getRestArgs(arguments,2);return n.vector(n[\"make-keyword\"](\"IF\"),n[\"traverse*\"](r,u),n[\"traverse*\"](e,u),n.isTrue(n[\"null?\"](t))?n.nil:n[\"traverse*\"](n.car(t),u))},n.cdr(c)):n.isTrue(n[\"eq?\"](s,n.intern(\"set!\")))?n.apply(function(r,e){return n.vector(n[\"make-keyword\"](\"SET!\"),n[\"traverse*\"](r,u),n[\"traverse*\"](e,u))},n.cdr(c)):n.isTrue(n[\"eq?\"](s,n.intern(\"lambda\")))?n.apply(function(t){var i=n._getRestArgs(arguments,1);return function(){return e(t),function(e){return n.vector(n[\"make-keyword\"](\"LAMBDA\"),e,t,r(i,e))}(n[\"create-scope\"](u,t))}()},n.cdr(c)):n.isTrue(n[\"eq?\"](s,n.intern(\"def\")))?n.apply(function(r,e){return n.vector(n[\"make-keyword\"](\"DEF\"),n[\"traverse*\"](r,u),n[\"traverse*\"](e,u))},n.cdr(c)):n.isTrue(n[\"eq?\"](s,n.intern(\"new\")))?n.apply(function(e){var t=n._getRestArgs(arguments,1);return n.vector(n[\"make-keyword\"](\"NEW\"),e,r(t,n[\"new-scope\"]))},n.cdr(c)):n.vector(n[\"make-keyword\"](\"FUNCALL\"),n[\"traverse*\"](n.car(i),u),r(n.cdr(i),u))}(n.car(c))}(i)}}(n.nil,n.nil,n.nil),n[\"traverse*\"]=function(r,e){return n.isTrue(n[\"pair?\"](r))?n.isTrue(n[\"local-var?\"](e,n.car(r)))?n[\"traverse-list\"](r,e):function(r){return n.isTrue(n[\"pair?\"](r))?n[\"traverse-list\"](r,e):n[\"traverse*\"](r,e)}(n.macroexpand(r)):n.isTrue(n[\"symbol?\"](r))?n.vector(n[\"make-keyword\"](\"REF\"),r):n.vector(n[\"make-keyword\"](\"CONST\"),r)},n[\"expand-args\"]=function(r,e){return n[\"string-join\"](n.map(function(r){return n[\"compile*\"](r,e)},r),\", \")},n[\"expand-body\"]=function(r,e){return n.isTrue(n[\"null?\"](r))?\"LISP.nil\":n[\"expand-args\"](r,e)},function(r){return n[\"hash-table-put!\"](r,\"\\\\\",\"\\\\\\\\\"),n[\"hash-table-put!\"](r,\"\t\",\"\\\\t\"),n[\"hash-table-put!\"](r,\"\\n\",\"\\\\n\"),n[\"hash-table-put!\"](r,'\"','\\\\\"'),n[\"escape-char\"]=function(e){return function(r){return n.isTrue(r)?r:e}(n[\"hash-table-get\"](r,e))}}(n[\"make-hash-table\"]()),n[\"escape-string\"]=function(r){return n[\"regexp-replace-all\"](/[\\\\\\t\\n\"]/,r,function(r){return n[\"escape-char\"](r())})},n[\"escape-sym-char\"]=function(r){return n[\"string-append\"](\"$\",n[\"integer->hex-string\"](n[\"char->integer\"](r),\"00\"))},n[\"integer->hex-string\"]=function(r,e){return function(r){return function(t){return function(e){return n.substring(r,t-e,t)}(n[\"string-length\"](e))}(n[\"string-length\"](r))}(n[\"string-append\"](e,n[\"number->string\"](r,16)))},n[\"escape-symbol\"]=function(r){return n[\"regexp-replace-all\"](/[^0-9A-Za-z_.]/,n[\"symbol->string\"](r),function(r){return n[\"escape-sym-char\"](n[\"string-ref\"](r(),0))})},n[\"compile-symbol\"]=function(r,e){return n.isTrue(n[\"local-var?\"](e,r))?n[\"escape-symbol\"](r):function(r){return n.isTrue(n.rxmatch(/^[0-9A-Za-z_.]*$/,r))?n[\"string-append\"](\"LISP.\",r):n[\"string-append\"]('LISP[\"',n[\"escape-string\"](r),'\"]')}(n[\"symbol->string\"](r))},n[\"compile-keyword\"]=function(r){return n[\"string-append\"]('LISP[\"make-keyword\"](\"',n[\"escape-string\"](n[\"keyword->string\"](r)),'\")')},n[\"compile-vector\"]=function(r,e){return n[\"string-append\"](\"[\",n[\"string-join\"](n.map(function(r){return n[\"compile-quote\"](r,e)},n[\"vector->list\"](r)),\", \"),\"]\")},n[\"compile-regexp\"]=function(r){return n[\"string-append\"](\"/\",n[\"regexp->string\"](r),\"/\")},n[\"compile-literal\"]=function(r,e){return n.isTrue(n[\"number?\"](r))?n[\"number->string\"](r):n.isTrue(n[\"symbol?\"](r))?n[\"compile-symbol\"](r,e):n.isTrue(n[\"keyword?\"](r))?n[\"compile-keyword\"](r):n.isTrue(n[\"string?\"](r))?n[\"x->string\"](r,n.t):n.isTrue(n[\"vector?\"](r))?n[\"compile-vector\"](r,e):n.isTrue(n[\"regexp?\"](r))?n[\"compile-regexp\"](r):n.isTrue(n[\"null?\"](r))?\"LISP.nil\":n.isTrue(n[\"eq?\"](r,n.t))?\"LISP.t\":n.error(n[\"string-append\"](\"compile-literal: [\",r,\"]\"))},n[\"unary-op?\"]=function(){var r=n.list(n.intern(\"+\"),n.intern(\"-\"),n.intern(\"!\"),n.intern(\"~\"));return function(e){return n.member(e,r)}}(),n[\"compile-unary-op\"]=function(r,e,t){return n[\"string-append\"](\"(\",n[\"symbol->string\"](r),n[\"compile*\"](e,t),\")\")},n[\"binop?\"]=function(){var r=n.list(n.intern(\"+\"),n.intern(\"-\"),n.intern(\"*\"),n.intern(\"/\"),n.intern(\"%\"));return function(e){return n.member(e,r)}}(),n[\"compile-binop\"]=function(r,e,t){return n[\"string-append\"](\"(\",n[\"string-join\"](n.map(function(r){return n[\"compile*\"](r,t)},e),n[\"string-append\"](\" \",n[\"symbol->string\"](r),\" \")),\")\")},n[\"do-compile-funcall\"]=function(r,e,t){return n[\"string-append\"](n[\"compile*\"](r,t),\"(\",n[\"expand-args\"](e,t),\")\")},n[\"compile-funcall\"]=function(r,e,t){return n.isTrue(n.isTrue(n[\"eq?\"](n[\"vector-ref\"](r,0),n[\"make-keyword\"](\"REF\")))&&n.isTrue(n.not(n[\"local-var?\"](t,n[\"vector-ref\"](r,1))))?n.not(n[\"null?\"](e)):n.nil)?function(i){return n.isTrue(n.isTrue(n[\"binop?\"](i))?n.not(n[\"null?\"](n.cdr(e))):n.nil)?n[\"compile-binop\"](i,e,t):n.isTrue(n.isTrue(n[\"unary-op?\"](i))?n[\"null?\"](n.cdr(e)):n.nil)?n[\"compile-unary-op\"](i,n.car(e),t):n[\"do-compile-funcall\"](r,e,t)}(n[\"vector-ref\"](r,1)):n[\"do-compile-funcall\"](r,e,t);\n},n[\"compile-quote\"]=function(r,e){return n.isTrue(n[\"pair?\"](r))?n[\"compile*\"](n.list(n.intern(\"cons\"),n.list(n.intern(\"quote\"),n.car(r)),n.list(n.intern(\"quote\"),n.cdr(r))),e):n.isTrue(n[\"symbol?\"](r))?n[\"string-append\"]('LISP.intern(\"',n[\"escape-string\"](n[\"symbol->string\"](r)),'\")'):n.isTrue(n[\"keyword?\"](r))?n[\"compile-keyword\"](r):n[\"compile-literal\"](r,e)},n[\"compile-if\"]=function(r,e,t,i){return n[\"string-append\"](\"(LISP.isTrue(\",n[\"compile*\"](r,i),\") ? (\",n[\"compile*\"](e,i),\") : (\",n.isTrue(t)?n[\"compile*\"](t,i):\"LISP.nil\",\"))\")},n[\"compile-set!\"]=function(r,e,t){return n[\"string-append\"](n[\"compile*\"](r,t),\" = \",n[\"compile*\"](e,t))},n[\"compile-lambda\"]=function(r,e,t,i){return n.isTrue(function(e){return n.isTrue(e)?e:n[\"pair?\"](r)}(n[\"null?\"](r)))?n.nil:n.error(\"function parameters must be a list\"),function(t){return function(r,t){return n[\"string-append\"](\"(function(\",n[\"string-join\"](n.map(function(r){return n[\"escape-symbol\"](r)},r),\", \"),\"){\",n.isTrue(n[\"null?\"](t))?\"\":n[\"string-append\"](\"var \",n[\"escape-symbol\"](t),\" = LISP._getRestArgs(arguments, \",n[\"number->string\"](n.length(r)),\"); \"),\"return (\",n[\"expand-body\"](e,i),\");})\")}(n.isTrue(t)?n.take(t,r):r,n.isTrue(t)?n.elt(t+1,r):n.nil)}(n[\"position-if\"](function(){var r=n.list(n.intern(\"&rest\"),n.intern(\"&body\"));return function(e){return n.member(e,r)}}(),r))},n[\"compile-def\"]=function(r,e,t){return n[\"string-append\"](n[\"compile*\"](r,t),\" = \",n[\"compile*\"](e,t))},n[\"compile-new\"]=function(r,e,t){return n[\"string-append\"](\"new \",n[\"symbol->string\"](r),\"(\",n[\"expand-args\"](e,t),\")\")},n[\"compile-new-scope\"]=function(r,e){return function(t){return n.isTrue(t)?n[\"string-append\"](\"(function() { var \",n[\"string-join\"](n.map(function(e){return n[\"string-append\"](n[\"escape-symbol\"](n.car(e)),\" = \",n[\"compile*\"](n.cdr(e),r))},n.reverse(t)),\", \"),\"; return \",e,\"; })()\"):e}(n[\"scope-get-var\"](r))},n[\"compile*\"]=function(r,e){return function(t){return n.isTrue(n[\"eq?\"](t,n[\"make-keyword\"](\"CONST\")))?n[\"compile-quote\"](n[\"vector-ref\"](r,1),e):n.isTrue(n[\"eq?\"](t,n[\"make-keyword\"](\"REF\")))?n[\"compile-symbol\"](n[\"vector-ref\"](r,1),e):n.isTrue(n[\"eq?\"](t,n[\"make-keyword\"](\"IF\")))?function(r,t,i){return n[\"compile-if\"](r,t,i,e)}(n[\"vector-ref\"](r,1),n[\"vector-ref\"](r,2),n[\"vector-ref\"](r,3)):n.isTrue(n[\"eq?\"](t,n[\"make-keyword\"](\"FUNCALL\")))?n[\"compile-funcall\"](n[\"vector-ref\"](r,1),n[\"vector-ref\"](r,2),e):n.isTrue(n[\"eq?\"](t,n[\"make-keyword\"](\"SET!\")))?n[\"compile-set!\"](n[\"vector-ref\"](r,1),n[\"vector-ref\"](r,2),e):n.isTrue(n[\"eq?\"](t,n[\"make-keyword\"](\"LAMBDA\")))?function(r,t,i){return n[\"compile-new-scope\"](r,n[\"compile-lambda\"](t,i,e,r))}(n[\"vector-ref\"](r,1),n[\"vector-ref\"](r,2),n[\"vector-ref\"](r,3)):n.isTrue(n[\"eq?\"](t,n[\"make-keyword\"](\"DEF\")))?n[\"compile-def\"](n[\"vector-ref\"](r,1),n[\"vector-ref\"](r,2),e):n.isTrue(n[\"eq?\"](t,n[\"make-keyword\"](\"NEW\")))?n[\"compile-new\"](n[\"vector-ref\"](r,1),n[\"vector-ref\"](r,2),e):n[\"compile-error\"](\"Unknown AST node:\",r)}(n[\"vector-ref\"](r,0))},n[\"compile-error\"]=function(){var r=n._getRestArgs(arguments,0);return n.error(r)},n.compile=function(r){return function(e){return function(r){return n[\"compile-new-scope\"](e,n[\"compile*\"](r,e))}(n[\"traverse*\"](r,e))}(n[\"create-scope\"](n.nil,n.nil))},n},function(LISP){LISP.eval=function(exp){return eval(LISP.compile(exp))}});\n\n"],"sourceRoot":"/source/"}